<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

		<changeSet id="MIFOS_5661" author="Lukasz Wyszomirski" context="expansion">
        <sql endDelimiter=";">
            insert into lookup_value(lookup_id,entity_id,lookup_name) values((select max(lv.lookup_id)+1 from
                lookup_value lv), 87, 'Permissions-CanImportLoans');
            insert into lookup_value(lookup_id,entity_id,lookup_name) values((select max(lv.lookup_id)+1 from
                lookup_value lv), 87, 'Permissions-CanImportSavings');

            insert into lookup_value_locale(locale_id,lookup_id,lookup_value) values
            	(1,(select lookup_id from lookup_value where entity_id =87 and
                lookup_name='Permissions-CanImportLoans'),null);
            insert into lookup_value_locale(locale_id,lookup_id,lookup_value) values
            	(1,(select lookup_id from lookup_value where entity_id =87 and
                lookup_name='Permissions-CanImportSavings'),null);

            insert into activity(activity_id,parent_id, activity_name_lookup_id, DESCRIPTION_lookup_id) 
            values(280,196,(select lookup_id from lookup_value where entity_id =87 and
                lookup_name='Permissions-CanImportLoans'),
                (select lookup_id from lookup_value where entity_id =87 and
                lookup_name='Permissions-CanImportLoans'));
			insert into activity(activity_id,parent_id, activity_name_lookup_id, DESCRIPTION_lookup_id) 
            values(281,196,(select lookup_id from lookup_value where entity_id =87 and
                lookup_name='Permissions-CanImportSavings'),
                (select lookup_id from lookup_value where entity_id =87 and
                lookup_name='Permissions-CanImportSavings'));
                
            insert into roles_activity(activity_id, role_id) values(280, 1);
            insert into roles_activity(activity_id, role_id) values(281, 1);
        </sql>
        <rollback>
            <sql endDelimiter=";">
                delete from roles_activity where activity_id = 280;
                delete from roles_activity where activity_id = 281;

                delete from activity where activity_id = 280;
                delete from activity where activity_id = 281;

                delete from lookup_value_locale where lookup_id =
                    (select lookup_id from lookup_value
                    where lookup_name='Permissions-CanImportLoans');
                delete from lookup_value_locale where lookup_id =
                    (select lookup_id from lookup_value
                    where lookup_name='Permissions-CanImportSavings');

                delete from lookup_value where entity_id = 87 and lookup_name =
                    'Permissions-CanImportLoans';
                delete from lookup_value where entity_id = 87 and lookup_name =
                    'Permissions-CanImportSavings';
            </sql>
        </rollback>
    </changeSet>
		<changeSet id="MIFOS-5671_1" author="Adrian Winkler" context="expansion">
			<sql endDelimiter=";">
			INSERT INTO lookup_value VALUES(DEFAULT, 87, 'Permissions-LoanTransactions-CanMakePaymentToAccountUsingSavingsTransfer');

			INSERT INTO lookup_value_locale(locale_id, lookup_id, lookup_value) SELECT 1, lookup_id, 
			'Can make payment to the account using Savings Account Transfer' FROM lookup_value 
			WHERE lookup_name = 'Permissions-LoanTransactions-CanMakePaymentToAccountUsingSavingsTransfer';

			INSERT INTO activity(activity_id, parent_id, activity_name_lookup_id, description_lookup_id) SELECT 282, 113, lookup_id, lookup_id 
			FROM lookup_value WHERE lookup_name = 'Permissions-LoanTransactions-CanMakePaymentToAccountUsingSavingsTransfer';

			INSERT INTO roles_activity(activity_id, role_id) SELECT activity_id, 1 FROM activity WHERE activity_name_lookup_id = 
			(SELECT lookup_id FROM lookup_value WHERE lookup_name = 'Permissions-LoanTransactions-CanMakePaymentToAccountUsingSavingsTransfer');
			</sql>
			<rollback>
				<sql endDelimiter=";">
				DELETE FROM roles_activity WHERE activity_id = 282;
	    		
	    		DELETE FROM activity WHERE activity_id = 282; 
	    		
	    		DELETE FROM lookup_value_locale WHERE lookup_value = 'Can make payment to the account using Savings Account Transfer';
	    		
	    		DELETE FROM lookup_value WHERE lookup_name = 'Permissions-LoanTransactions-CanMakePaymentToAccountUsingSavingsTransfer';
				</sql></rollback>
		</changeSet>
	<changeSet id="MIFOS-5616_1" author="Michal Dudzinski" context="expansion">
	   	<sql endDelimiter=";">
	    	DROP TABLE IF EXISTS admin_document_acc_action_mix;
	    	CREATE TABLE admin_document_acc_action_mix (
			  admin_doc_acc_action_mix_id integer auto_increment,
			  account_action_id smallint not null,
			  admin_document_id integer not null,
			  created_by smallint,
			  create_date date,
			  updated_by smallint,
			  updated_date date,
			  version_no integer,
			  PRIMARY KEY (admin_doc_acc_action_mix_id),
			  foreign key (account_action_id)
			    references account_action(account_action_id)
			    on delete no action
			    on update no action,
			  foreign key (admin_document_id)
			    references admin_document(admin_document_id)
			    on delete no action
			    on update no action
			)
	   	</sql>
	   	<rollback>
	   		<sql endDelimiter=";">
	   			DROP TABLE admin_document_acc_action_mix;
	   		</sql>
	   	</rollback>
    </changeSet>
    <changeSet id="MIFOS-5733_1" author="Jakub Podeszwik" context="contraction">
        <sql endDelimiter=";">
            UPDATE loan_schedule ls1
            INNER JOIN loan_account la
            ON ls1.account_id = la.account_id
            INNER JOIN loan_schedule ls2
            ON ls2.account_id = la.parent_account_id
            SET ls1.action_date = ls2.action_date
            WHERE ls1.installment_id = ls2.installment_id;
        </sql>
        <rollback>
        </rollback>
    </changeSet>
</databaseChangeLog>