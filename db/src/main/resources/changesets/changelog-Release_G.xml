<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
    <changeSet id="MIFOS-4633_1" author="Van Mittal-Henkle" context="expansion">
        <createTable tableName="customized_text">
            <column name="original_text" type="varchar(50)">
				<constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="custom_text" type="varchar(50)">
				<constraints nullable="false"/>
            </column>
        </createTable>
        <modifySql dbms="mysql">
            <append value=" engine=innodb character set utf8 collate utf8_bin"/>
        </modifySql>
    </changeSet>
    <changeSet id="MIFOS-4633_2" author="Van Mittal-Henkle" context="expansion">
        <sql endDelimiter=";">
				insert into customized_text(original_text, custom_text)
				select concat(lookup_entity.entity_name, ".Label"), lookup_label.entity_name 
				from lookup_label lookup_label,	lookup_entity lookup_entity
				where lookup_label.entity_id = lookup_entity.entity_id 
				and lookup_label.entity_name is not null 
				and not lookup_entity.entity_name like 'CustomField%';       
		</sql> 
		<rollback>
            <sql endDelimiter=";">
                delete from customized_text where original_text like '%.Label';
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="MIFOS_2852_1" author="Piotr Bogacz" context="expansion">
        <sql endDelimiter=";">
            insert into field_configuration(field_config_id,field_name,entity_id,mandatory_flag,hidden_flag) values((select max(fc.field_config_id)+1 from
            field_configuration fc), 'City', 17, 0, 0);
        </sql>
        <rollback>
            <sql endDelimiter=";">
                delete from field_configuration where field_name = 'City' and entity_id = 17;
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="MIFOS-4951_1" author="Van Mittal-Henkle" context="expansion">
        <sql endDelimiter=";">
			DROP PROCEDURE IF EXISTS reassignSearchIds;
		</sql>
		<createProcedure>
			CREATE PROCEDURE reassignSearchIds()
			BEGIN
			    DECLARE v_done INT DEFAULT 0
			    ;DECLARE v_branch_id INT
			    ;DECLARE v_customer_id INT
			    ;DECLARE v_kid_id INT
			    ;DECLARE v_kid_count INT
			
			    ;DECLARE v_search_id varchar(100)
			    ;DECLARE v_customer_level_id INT
			    ;DECLARE v_output VARCHAR(5000) DEFAULT ''
			    
			    ;DECLARE used_branches CURSOR FOR
			        select distinct(branch_id) as branch_id  
			        from customer
			        where parent_customer_id is null
			        order by 1
			        
			    ;DECLARE top_customers CURSOR FOR
			        SELECT customer_id, search_id
			        FROM   customer
			        WHERE  branch_id = v_branch_id AND customer_level_id = v_customer_level_id
			        ORDER BY customer_id
			        
			    ;DECLARE kids CURSOR FOR
			        SELECT customer_id
			        FROM   customer
			        WHERE  parent_customer_id = v_customer_id 
			        ORDER BY customer_id
			        
			    ;DECLARE CONTINUE HANDLER FOR NOT FOUND
			        SET v_done = TRUE
			
			    ;OPEN used_branches
			    ;REPEAT
			        FETCH used_branches into v_branch_id
			    
			        ;if not v_done then
			            update customer
			            set search_id = concat('1.', customer_id)
			            where parent_customer_id is null
			            and branch_id = v_branch_id
			        ;end if
			    ;UNTIL v_done END REPEAT
			    ;CLOSE used_branches
			    		  
			    ;SET v_customer_level_id := 3
			    
				;REPEAT
				
				    SET v_done = 0
				
				    ;OPEN used_branches
				    ;branches_loop: LOOP
				        FETCH used_branches into v_branch_id
				    
				        ;IF v_done THEN
				            CLOSE used_branches
				            ;LEAVE branches_loop
				        ;END IF
				        				
				        ;START TRANSACTION
				
				        ;SET v_output := concat(v_output, ' , ', v_branch_id)
				
				        ;OPEN top_customers
				        ;top_customers_loop: LOOP
				            FETCH top_customers into v_customer_id, v_search_id
				            ;IF v_done THEN
				                 CLOSE top_customers
				                 ;SET v_done = 0
				                 ;LEAVE top_customers_loop
				            ;END IF
				                         
				            ;OPEN kids
				            ;SET v_kid_count := 0
				            ;kids_loop: LOOP
				                FETCH kids into v_kid_id
				                ;IF v_done THEN
				                    CLOSE kids
				                    ;SET v_done = 0
				                    ;LEAVE kids_loop
				                ;END IF
				            
				                ;SET v_kid_count := v_kid_count + 1
				                
				                ;update customer
						    		set search_id = concat(v_search_id, '.', v_kid_count)
				                    where customer_id = v_kid_id
				            
				            ;END LOOP kids_loop            
				            
				        ;END LOOP top_customers_loop
				        
				        ;COMMIT
				        
				    ;END LOOP branches_loop
				
				    ;SET v_customer_level_id := v_customer_level_id - 1
				;UNTIL v_customer_level_id = 1 END REPEAT
			
			;END
			;
		</createProcedure>		
        <sql endDelimiter=";">
   			CALL reassignSearchIds();
			DROP PROCEDURE IF EXISTS reassignSearchIds;       
        </sql>
		<rollback>
		</rollback>
    </changeSet>
</databaseChangeLog>
