<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<!-- 
Copyright (c) 2005-2008 Grameen Foundation USA
1029 Vermont Avenue, NW, Suite 400, Washington DC 20005
All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing
permissions and limitations under the License.

See also http://www.apache.org/licenses/LICENSE-2.0.html for an
explanation of the license and how it is applied.
-->                            
<hibernate-mapping>
	<class
		name="org.mifos.reports.branchreport.BranchReportStaffingLevelSummaryBO"
		table="BATCH_STAFFING_LEVEL_SUMMARY">
		<id name="staffingLevelSummaryId" column="STAFFING_LEVEL_SUMMARY_ID"
			type="integer" access="field">
			<generator class="native" />
		</id>
		<property name="isTotal" column="ROLE_ID" type="integer" access="field" />
		<property name="titleName" column="ROLE_NAME" type="string" access="field" />
		<property name="personnelCount" column="PERSONNEL_COUNT" type="integer" access="field" />		 
		<many-to-one name="branchReport" column="BRANCH_REPORT_ID" access="field"
			class="org.mifos.reports.branchreport.BranchReportBO">
		</many-to-one>		
	</class>
	
	<sql-query
		name="branchReport.getBranchReportStaffingLevelSummaryForDateAndBranch">
		<load-collection alias="staffingLevelSummaries"
			role="org.mifos.reports.branchreport.BranchReportBO.staffingLevelSummaries" />
		<![CDATA[ SELECT {staffingLevelSummaries.*} from batch_staffing_level_summary as staffingLevelSummaries, 
			batch_branch_report as branchReport where 
			branchReport.branch_report_id=staffingLevelSummaries.branch_report_id 
			and branchReport.run_date=:RUN_DATE 
			and branchReport.branch_id=:BRANCH_ID
		]]>
	</sql-query>			

	<sql-query name="branchReport.extractStaffingLevelSummaryForBranchByTitle">
		<return-scalar column="personnelCount" type="integer"/>
	    <return-scalar column="titleKey" type="string"/> 	    
	    <return-scalar column="titleValueOverride" type="string"/> 	    
		<![CDATA[select count(*) as personnelCount, lv.lookup_name as titleKey, lvl.lookup_value as titleValueOverride
			from personnel p left join lookup_value lv on p.title = lv.lookup_id  
			left join lookup_value_locale lvl on lvl.lookup_value_id = lv.lookup_id 
			where p.office_id = :officeId 
			and p.personnel_status=1
			group by title;
		]]>
	</sql-query>			
</hibernate-mapping>
