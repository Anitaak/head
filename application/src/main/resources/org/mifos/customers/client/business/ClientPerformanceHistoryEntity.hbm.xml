<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping>

    <class name="org.mifos.customers.client.business.ClientPerformanceHistoryEntity" table="CLIENT_PERF_HISTORY">
        <id name="id" column="ID" type="integer" access="field">
            <generator class="native"/>
	   </id>
        
        <property name="noOfActiveLoans" column="TOTAL_ACTIVE_LOANS" />
        <property name="lastLoanAmount" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
	        <column name="LAST_LOAN_AMNT_CURRENCY_ID" /> 
			<column name="LAST_LOAN_AMNT" />
		</property>
		<property name="delinquentPortfolio" 
			type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
	        <column name="DELINQUINT_PORTFOLIO_CURRENCY_ID" /> 
			<column name="DELINQUINT_PORTFOLIO" />
		</property>
		<property name="totalSavings" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
	        <column name="TOTAL_SAVINGS_AMNT_CURRENCY_ID" /> 
			<column name="TOTAL_SAVINGS_AMNT" />
		</property>     
        <many-to-one name="client" column="CUSTOMER_ID"
			class="org.mifos.customers.client.business.ClientBO" unique="true" access="field"/>
		<set name="loanCounters" cascade="all" table="LOAN_COUNTER" lazy="false" access="field" inverse="true">
			<key column="CLIENT_PERF_ID" />
			<one-to-many class="org.mifos.customers.client.business.LoanCounter" />
		</set>
    </class>    
    
	<sql-query name="ClientPerformanceHistory.getLastLoanAmountWhenRepaidLoanAdjusted">
		<return-scalar column="loanAccountId" type="integer" />
		<return-scalar column="lastLoanAmount" type="big_decimal" />
	    <![CDATA[select la.account_id as loanAccountId, la.loan_amount as lastLoanAmount
				from customer c
				join client_perf_history cph on cph.customer_id = c.customer_id
				left join account a on a.customer_id = c.customer_id and account_type_id = 1 and a.account_state_id = 6
				left join loan_account la on la.account_id = a.account_id
				left join account_status_change_history asch on asch.account_id = a.account_id and asch.new_status = 6

				where ifnull(asch.account_status_change_id, -1) = 
        					(select ifnull(max(asch2.account_status_change_id), -1) 
        					from customer c2
        					join account a2 on a2.customer_id = c2.customer_id and account_type_id = 1 and a2.account_state_id = 6
        					join account_status_change_history asch2 on asch2.account_id = a2.account_id and asch2.new_status =6
        					where c2.customer_id = :CLIENT_ID
        					and a2.account_id <> :EXCLUDE_ACCOUNT_ID)
        
				and c.customer_id = :CLIENT_ID
				and a.account_id <> :EXCLUDE_ACCOUNT_ID
			]]>
	</sql-query>
	
</hibernate-mapping>