<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >


<hibernate-mapping>

	<class name="org.mifos.application.personnel.business.PersonnelBO"
		table="PERSONNEL">
		<id name="personnelId" column="PERSONNEL_ID" type="short">
			<generator class="native" />
		</id>
		<version name="versionNo" column="VERSION_NO" type="integer"
			unsaved-value="negative" />
		<many-to-one name="level" column="LEVEL_ID"
			class="org.mifos.application.personnel.business.PersonnelLevelEntity"
			unique="true" lazy="false" />
		<many-to-one name="office" column="OFFICE_ID"
			class="org.mifos.application.office.business.OfficeBO" unique="true"
			lazy="false" />
		<many-to-one name="preferredLocale" column="PREFERRED_LOCALE"
			class="org.mifos.application.master.util.valueobjects.SupportedLocales" />
		<one-to-one name="personnelDetails"
			class="org.mifos.application.personnel.business.PersonnelDetailsEntity"
			cascade="all" lazy="false" />

		<property name="globalPersonnelNum"
			column="GLOBAL_PERSONNEL_NUM" type="string" />
		<property name="displayName" column="DISPLAY_NAME"
			type="string" />
		<property name="personnelStatus" column="PERSONNEL_STATUS"
			type="short" />
		<property name="title" column="TITLE" type="integer" />
		<property name="searchId" column="SEARCH_ID" type="string" />
		<property name="maxChildCount" column="MAX_CHILD_COUNT"
			type="integer" />
		<property name="encriptedPassword" column="PASSWORD"
			type="binary" />
		<property name="userName" column="LOGIN_NAME" type="string" />
		<property name="emailId" column="EMAIL_ID" type="string" />
		<property name="passwordChanged" column="PASSWORD_CHANGED"
			type="short" />
		<property name="createdBy" column="CREATED_BY" type="short" />
		<property name="createdDate" column="CREATED_DATE" type="date" />
		<property name="updatedBy" column="UPDATED_BY" type="short" />
		<property name="updatedDate" column="UPDATED_DATE" type="date" />
		<property name="lastLogin" column="LAST_LOGIN" type="date" />
		<property name="locked" column="LOCKED" type="short" />
		<property name="noOfTries" column="NO_OF_TRIES" type="short" />
		<set name="customFields" lazy="false"
			table="PERSONNEL_CUSTOM_FIELD">
			<key column="PERSONNEL_ID" />
			<composite-element
				class="org.mifos.application.personnel.business.PersonnelCustomFieldView">
				<property name="fieldId" column="FIELD_ID"
					not-null="true" />
				<property name="fieldValue" column="FIELD_VALUE" />
			</composite-element>
		</set>
		<set name="personnelRoles" cascade="all" inverse="true"
			lazy="false">
			<key column="PERSONNEL_ID" />
			<one-to-many
				class="org.mifos.application.personnel.business.PersonnelRoleEntity" />
		</set>
	</class>
	<!-- This query obtains all the active loan officers under a particular office -->
	<query name="masterdata.activeloanofficers">
		<![CDATA[select new org.mifos.application.personnel.business.PersonnelView(personnel.personnelId,personnel.displayName) from org.mifos.application.personnel.business.PersonnelBO as personnel where ((personnel.personnelId=:userId and :userLevelId=:levelId) or (:userLevelId!=:levelId and personnel.level.levelId = :levelId)) and personnel.office.officeId =:officeId and personnel.personnelStatus =:statusId order by personnel.displayName]]>
	</query>
	<query name="personnel.formedByLoanOfficers"><![CDATA[select new org.mifos.application.personnel.business.PersonnelView(personnel.personnelId,personnel.displayName) from org.mifos.application.personnel.business.PersonnelBO as personnel where personnel.level.levelId = :levelId and personnel.office.officeId =:officeId and personnel.personnelStatus =:statusId]]></query>
	<query name="getCountActivePersonnel">
		<![CDATA[select count(*)  from org.mifos.application.personnel.business.PersonnelBO as personnel where  personnel.office.officeId =:OFFICE_ID and personnel.personnelStatus =:STATUS_ID]]>
	</query>
	
</hibernate-mapping>
