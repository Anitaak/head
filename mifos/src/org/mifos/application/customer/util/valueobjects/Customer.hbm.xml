<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >


<hibernate-mapping>

    <class name="org.mifos.application.customer.util.valueobjects.Customer" table="CUSTOMER">
        <id name="customerId" column="CUSTOMER_ID" type="integer" unsaved-value="-1">
            <generator class="native"/>
        </id>
 		<discriminator>
      		<column name="DISCRIMINATOR"/>
   		 </discriminator>
 		<version name="versionNo" column="VERSION_NO" type="integer" unsaved-value="null"/>
        <property name="globalCustNum" column="GLOBAL_CUST_NUM" type="string" />
        <property name="statusId" column="STATUS_ID" type="short" />
        <property name="displayName" column="DISPLAY_NAME" type="string" />
        <property name="governmentId" column="GOVERNMENT_ID" type="string" />
        <property name="displayAddress" column="DISPLAY_ADDRESS" type="string"  />
        <property name="externalId" column="EXTERNAL_ID" type="string"   />
        <property name="dateOfBirth" column="DATE_OF_BIRTH" type="date"   />
        <property name="groupFlag" column="GROUP_FLAG" type="short" />
        <property name="trained" column="TRAINED" type="short" />
        <property name="trainedDate" column="TRAINED_DATE" type="date"   />
        <property name="createdDate" column="CREATED_DATE" type="date" />
        <property name="updatedDate" column="UPDATED_DATE" type="date" />
        <property name="mfiJoiningDate" column="MFI_JOINING_DATE" type="date" />
        <property name="searchId" column="SEARCH_ID" type="string" />
        <property name="maxChildCount" column="MAX_CHILD_COUNT" type="integer" />
        <property name="hoUpdated" column="HO_UPDATED" type="short" />
        <property name="clientConfidential" column="CLIENT_CONFIDENTIAL" type="short" />
        <property name="createdBy" column="CREATED_BY"  />
        <property name="updatedBy" column="UPDATED_BY"  />
        <property name="blackListed" column="BLACKLISTED"  />
        <!-- to remove-->
        <property name="personnelId" column="LOAN_OFFICER_ID" insert="false" update="false" />
        <property name="customerActivationDate" column="CUSTOMER_ACTIVATION_DATE " not-null="false"/>
        
 		<many-to-one name="customerLevel" column="CUSTOMER_LEVEL_ID" class="org.mifos.application.customer.util.valueobjects.CustomerLevel" insert="true" update="true"  unique="true" lazy="true"/>
 		<many-to-one name="personnel" column="LOAN_OFFICER_ID" class="org.mifos.application.personnel.util.valueobjects.Personnel" unique="true" lazy="true" insert="true" update="true"/>
 		<many-to-one name="customerFormedByPersonnel" column="CUSTOMER_FORMEDBY_ID" class="org.mifos.application.personnel.util.valueobjects.Personnel" unique="true" lazy="true" insert="true" update="true"/>
 		<many-to-one name="office" column="BRANCH_ID" class="org.mifos.application.office.util.valueobjects.Office" unique="true" lazy="true" insert="true" update="true"/>
		<one-to-one name="customerAddressDetail" class="org.mifos.application.customer.util.valueobjects.CustomerAddressDetail" cascade="all" lazy="true" property-ref="customer"/>
<!--       	<one-to-one name="customerAccount"  class="org.mifos.application.accounts.util.valueobjects.Account"  cascade="all" lazy="true" fetch="join" property-ref="customer"/>-->
		<!-- <one-to-one name="customerHierarchy"  class="org.mifos.application.customer.util.valueobjects.CustomerHierarchy"  cascade="none" lazy="true" property-ref="customer"/> -->
		<one-to-one name="customerDetail" class="org.mifos.application.customer.util.valueobjects.CustomerDetail" cascade="all" lazy="true"/>
		<many-to-one  name="parentCustomer" column="PARENT_CUSTOMER_ID" class="org.mifos.application.customer.util.valueobjects.Customer" cascade="none" insert="true" unique="true" update="true" lazy="true"/>
		<one-to-one name="historicalData"  class="org.mifos.application.customer.util.valueobjects.CustomerHistoricalData" cascade="all"  lazy="true" property-ref="customer"/>
		
		<!--Customer Meeting-->
		<one-to-one  name="customerMeeting" class="org.mifos.application.customer.util.valueobjects.CustomerMeeting" cascade="all"  lazy="true" property-ref="customer"/>		
		
		<!-- <set name="customFieldSet" lazy ="true" table ="CUSTOMER_CUSTOM_FIELD">
			<key column = "CUSTOMER_ID"/>
			<composite-element class ="org.mifos.application.customer.util.valueobjects.CustomerCustomField">
								   	
				<property name="fieldId" column="FIELD_ID" not-null="true"/>
				<property name="fieldValue" column="FIELD_VALUE" />
			</composite-element>
		</set>-->
		<set name="customFieldSet"  cascade="all" 	lazy="true">
		            <key column="CUSTOMER_ID" update="false"  />
		            <one-to-many class="org.mifos.application.customer.util.valueobjects.CustomerCustomField" />
        </set>
		      <set name="customerPositions"  cascade="all" 	lazy="true">
		            <key column="PARENT_CUSTOMER_ID" update="false"  />
		            <one-to-many   class="org.mifos.application.customer.util.valueobjects.CustomerPosition" />
        		</set>
         		 <set name="customerAccounts"  cascade="all" table="ACCOUNT" >
		            <key column="CUSTOMER_ID" />
		            <one-to-many   class="org.mifos.application.accounts.util.valueobjects.Account" />
        		</set>
        		
        			<set name="customerFlag"  cascade="none" 	lazy="true">
				  <key column="CUSTOMER_ID"   />
				  <one-to-many   class="org.mifos.application.customer.util.valueobjects.CustomerFlag" />
        		</set>
		
		
		
		

 		<!--
 		<many-to-one name="customerMeeting" property-ref="customer" class="org.mifos.application.customer.util.valueobjects.CustomerMeeting"  not-null="true" unique="true"/>
		-->
	<subclass name="org.mifos.application.customer.center.util.valueobjects.Center" discriminator-value="CENTER">
	</subclass>
	
	<subclass name="org.mifos.application.customer.group.util.valueobjects.Group" discriminator-value="GROUP">
		<!--<one-to-one name="customerNameDetail"  class="org.mifos.application.customer.util.valueobjects.CustomerNameDetail" cascade="all" lazy="true" property-ref="customer"/>-->
		<!-- <set name="customerProgram" lazy ="false" table ="CUSTOMER_PROGRAM">
					<key column = "CUSTOMER_ID"/>
					<composite-element class ="org.mifos.application.customer.util.valueobjects.CustomerProgram">
										   						
						<many-to-one name="program" column="PROGRAM_ID" class="org.mifos.application.program.util.valueobjects.Program" unique="true"  lazy="true"></many-to-one>
					</composite-element>
		</set> -->
		<one-to-one name="groupPerformanceHistory" class="org.mifos.application.customer.group.util.valueobjects.GroupPerformanceHistory" cascade="all" lazy="true"/>
	</subclass>
	<subclass name="org.mifos.application.customer.client.util.valueobjects.Client" discriminator-value="CLIENT">
		<set name="customerNameDetailSet" cascade="all">
			<key column="CUSTOMER_ID"/>
			<one-to-many class="org.mifos.application.customer.util.valueobjects.CustomerNameDetail"/>
		</set>
		<one-to-one name="clientPerformanceHistory" class="org.mifos.application.customer.client.util.valueobjects.ClientPerformanceHistory" cascade="all" lazy="true"/>
	</subclass>

    </class>
    <!-- This query obtains all the customers which have a search string like the one being passed. 
    	 Hence all the children of a particular parent is obtained -->
        <query name="getCustomerMaster">
	        	   <![CDATA[from  org.mifos.application.customer.util.valueobjects.Customer customer where customer.searchId like :SEARCH_STRING]]>
          </query>
         <query name="getCustomerMasterBySearchId">
	        	   <![CDATA[select new org.mifos.application.customer.util.valueobjects.CustomerMaster(customer.customerId,customer.displayName,customer.globalCustNum,customer.statusId,customer.customerLevel.levelId,customer.versionNo,customer.office.officeId,customer.personnel.personnelId) from Customer customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID]]>
          </query>
	 <!-- This query obtains  the customer with the specified customer id -->
        <query name="Customer.RetrieveCustomerMaster">
	        	   <![CDATA[select new org.mifos.application.customer.util.valueobjects.CustomerMaster(customer.customerId,customer.displayName,customer.globalCustNum,customer.statusId,customer.customerLevel.levelId,customer.versionNo,customer.office.officeId,customer.personnel.personnelId,customer.customerMeeting.meeting.MeetingDetails.recurAfter)
	        	    	     from Customer customer
	        	    	     where customer.customerId =:customerId ]]>
        </query>          
  
   <!-- This query obtains  the customer with the specified loan office id,officeid,customerlevelid -->
        <query name="Customer.getloanofficercustomers">
	        	   <![CDATA[from  org.mifos.application.customer.util.valueobjects.Customer customer where customer.personnel.personnelId=:personnelId and 
	        	   		customer.office.officeId=:officeId and customer.customerLevel.levelId=:customerLevelId]]>
        </query> 
        
        <query name="Customer.getloanofficercenters">
	        	   <![CDATA[from  org.mifos.application.customer.util.valueobjects.Customer customer where customer.personnel.personnelId=:personnelId and 
	        	   		customer.office.officeId=:officeId and customer.customerLevel.levelId=:customerLevelId and customer.statusId=:CENTERACTIVE]]>
        </query>
        
        <query name="Customer.getloanofficergroups">
	        	   <![CDATA[from  org.mifos.application.customer.util.valueobjects.Customer customer where customer.personnel.personnelId=:personnelId and 
	        	   		customer.office.officeId=:officeId and customer.customerLevel.levelId=:customerLevelId and (customer.statusId=:GROUPACTIVE or customer.statusId=:GROUPONHOLD)]]>
        </query>
        
         <!-- This query obtains  the loanofficers with the specified officeid -->
        <query name="Customer.getloanofficers">
	        	   <![CDATA[from  org.mifos.application.personnel.util.valueobjects.Personnel personnel 
	        	   			where personnel.level.levelId=:personnelLevelId and 
	        	   			personnel.office.officeId=:officeId ]]>
        </query>
        
        <query name="Customer.getactiveloanofficers">
	        	   <![CDATA[from  org.mifos.application.personnel.util.valueobjects.Personnel personnel 
	        	   			where personnel.level.levelId=:personnelLevelId and 
	        	   			personnel.office.officeId=:officeId and personnel.personnelStatus=:ACTIVE]]>
        </query>
        
         <!-- This query obtains  the branch offices under the office -->
        <query name="Customer.getOffices">
	        	   <![CDATA[from  org.mifos.application.office.util.valueobjects.Office office 
	        	   			where office.searchId like :officeSearchId and
	        	   			office.level.levelId=:officeLevelId]]>
        </query>   
        
        <query name="Customer.getActiveOffices">
	        	   <![CDATA[from  org.mifos.application.office.util.valueobjects.Office office 
	        	   			where office.searchId like :officeSearchId and
	        	   			office.level.levelId=:officeLevelId and office.status.statusId=:ACTIVE]]>
        </query> 
        
        <!-- This query obtains  the customer meeting given a customerId -->
        <query name="customer.getCustomerMeeting">
	        	   <![CDATA[from  org.mifos.application.customer.util.valueobjects.CustomerMeeting customerMeeting 
	        	   			where customerMeeting.customer.customerId = :customerId ]]>
        </query>    
          
        <query name="getActiveCenterCountForLO">
	        	   <![CDATA[select count(*) from Customer customer where customer.customerLevel.levelId =:levelId and customer.personnel.personnelId=:userId and customer.statusId!=:statusId and customer.office.officeId=:officeId]]>
        </query> 
        <query name="getActiveCustomerCountForLO">
	        	   <![CDATA[select count(*) from Customer customer where customer.customerLevel.levelId =:levelId and customer.personnel.personnelId=:userId and customer.statusId!=:statusId1 and customer.statusId!=:statusId2 and customer.office.officeId=:officeId]]>
        </query> 
        <query name="getCustomerCountForLO">
	        	   <![CDATA[select count(*) from Customer customer where customer.personnel.personnelId=:userId and customer.office.officeId=:officeId]]>
        </query> 
        <query name="isGroupNameExist">
	        	   <![CDATA[from org.mifos.application.customer.util.valueobjects.Customer as gp where gp.displayName = :gpname and gp.office.officeId=:offid and gp.customerLevel.levelId=:levelId]]>
        </query> 

        <query name="doesCenterNameExist">
	        	   <![CDATA[from org.mifos.application.customer.util.valueobjects.Customer as center where center.displayName = :centername and center.customerLevel.levelId =:LEVELID]]>
        </query> 

        <query name="countActiveCustomersForParent">
	        	   <![CDATA[select count(*) from org.mifos.application.customer.util.valueobjects.Customer customer where customer.customerLevel.levelId=:levelId and customer.parentCustomer.customerId = :parentId and customer.statusId != :statusId and customer.statusId != :otherStatusId]]>
        </query> 
        <query name="findCustomerBySystemId">
	        	   <![CDATA[from org.mifos.application.customer.util.valueobjects.Customer customer where customer.globalCustNum =:globalCustNum]]>
        </query> 
        <query name="groupSearchWithCenter">
	        	   <![CDATA[select distinct customer.office.officeName,customer.displayName,customer.parentCustomer.displayName, customer.customerId from Customer customer where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) and customer.office.searchId like :SEARCH_ID and customer.displayName like :SEARCH_STRING and customer.customerLevel.levelId =:LEVEL_ID and customer.statusId!=:STATUS1 and customer.statusId!=:STATUS2 ORDER BY customer.office.officeName,customer.parentCustomer.displayName ,customer.displayName]]>
        </query>
        <query name="count_groupSearchWithCenter">
	        	   <![CDATA[select count(*) from Customer customer where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) and customer.office.searchId like :SEARCH_ID and customer.displayName like :SEARCH_STRING and customer.customerLevel.levelId =:LEVEL_ID and customer.statusId!=:STATUS1 and customer.statusId!=:STATUS2 ORDER BY customer.office.officeName,customer.parentCustomer.displayName ,customer.displayName]]>
        </query>
        <query name="groupSearchWithoutCenter">
	        	   <![CDATA[select distinct customer.office.officeName,customer.displayName,customer.customerId from Customer customer where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) and customer.office.searchId like :SEARCH_ID and customer.displayName like :SEARCH_STRING and customer.customerLevel.levelId =:LEVEL_ID and customer.statusId!=:STATUS1 and customer.statusId!=:STATUS2 ORDER BY customer.office.officeName,customer.displayName]]>
        </query>
        <query name="isCenterActive">
	        	   <![CDATA[select count(*) from Customer customer where customer.customerId = :customerId and customer.statusId = :statusId]]>
        </query>
        
        <query name="getCenterCount">
	        	   <![CDATA[select count(*) from Center center where center.customerLevel.levelId =:LEVELID and center.office.officeId =:OFFICEID]]>
        </query>
        
        <query name="getCustomerCountForOffice">
	        	   <![CDATA[select count(*) from org.mifos.application.customer.util.valueobjects.Customer customer where customer.office.officeId =:OFFICEID]]>
        </query>
        
         <query name="searchCenters">
	        	   <![CDATA[select distinct customer.office.officeId, customer.office.officeName,customer.globalCustNum,customer.displayName from Customer customer where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) and customer.office.searchId like :SEARCH_ID and customer.displayName like :CENTER_NAME and customer.customerLevel.levelId =:LEVEL_ID and customer.statusId = :STATUS_ID ORDER BY customer.office.officeName ,customer.displayName ]]>
        </query>
        
         <query name="count_searchCenters">
	        	   <![CDATA[select count(*) from Customer customer where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) and customer.office.searchId like :SEARCH_ID and customer.displayName like :CENTER_NAME and customer.customerLevel.levelId =:LEVEL_ID and customer.statusId = :STATUS_ID ORDER BY customer.office.officeName ,customer.displayName ]]>
        </query>
        <query name="Customer.search">
	        	   <![CDATA[select distinct c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.levelId,off.officeId,off.officeName,per.displayName,per.personnelId,c.statusId,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum from org.mifos.application.customer.util.valueobjects.Customer as c  left join c.parentCustomer as pa left join 	pa.parentCustomer as papa left join c.office as off  left join c.personnel as per , org.mifos.application.customer.util.valueobjects.CustomerNameDetail as cnd where ( (:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or :USERLEVEL_ID!=:LOID) and c.office.officeId=:OFFICEID and ((c.customerLevel.levelId !=:LEVELID and c.displayName like :SEARCH_STRING) or ((c.customerLevel.levelId =:LEVELID and cnd.customer.customerId=c.customerId and cnd.nameType=:CLIENTNAMETYPE) and (cnd.firstName like :SEARCH_STRING or cnd.lastName like :SEARCH_STRING or cnd.secondLastName like :SEARCH_STRING) )) order by c.customerLevel.levelId,cnd.lastName,cnd.firstName,c.displayName]]>
        </query>
        <query name="Customer.count_search">
	        	   <![CDATA[select count(distinct c.customerId) from org.mifos.application.customer.util.valueobjects.Customer as c  left join c.parentCustomer as pa left join 	pa.parentCustomer as papa left join c.office as off  left join c.personnel as per , org.mifos.application.customer.util.valueobjects.CustomerNameDetail as cnd where ( (:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or :USERLEVEL_ID!=:LOID) and c.office.officeId=:OFFICEID and ((c.customerLevel.levelId !=:LEVELID and c.displayName like :SEARCH_STRING) or ((c.customerLevel.levelId =:LEVELID and cnd.customer.customerId=c.customerId and cnd.nameType=:CLIENTNAMETYPE) and (cnd.firstName like :SEARCH_STRING or cnd.lastName like :SEARCH_STRING or cnd.secondLastName like :SEARCH_STRING) )) order by c.customerLevel.levelId,cnd.lastName,cnd.firstName,c.displayName]]>
        </query>       
        <query name="Customer.search_noclients">
	        	   <![CDATA[select distinct c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.levelId,off.officeId,off.officeName,per.displayName,per.personnelId,c.statusId,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum from org.mifos.application.customer.util.valueobjects.Customer as c  left join c.parentCustomer as pa left join 	pa.parentCustomer as papa left join c.office as off  left join c.personnel as per  where ((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or :USERLEVEL_ID!=:LOID) and c.office.officeId=:OFFICEID and c.customerLevel.levelId !=:LEVELID and c.displayName like :SEARCH_STRING order by c.customerLevel.levelId,c.displayName]]>
        </query>
        <query name="Customer.count_search_noclients">
	        	   <![CDATA[select count(distinct c.customerId) from org.mifos.application.customer.util.valueobjects.Customer as c  left join c.parentCustomer as pa left join 	pa.parentCustomer as papa left join c.office as off  left join c.personnel as per  where ((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or :USERLEVEL_ID!=:LOID) and c.office.officeId=:OFFICEID and c.customerLevel.levelId !=:LEVELID and c.displayName like :SEARCH_STRING order by c.customerLevel.levelId,c.displayName]]>
        </query> 
        
        <query name="Customer.search_noofficeid">
	        	   <![CDATA[select  distinct c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.levelId,off.officeId,off.officeName,per.displayName,per.personnelId,c.statusId,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum from  org.mifos.application.customer.util.valueobjects.Customer as c left join c.parentCustomer as pa left join pa.parentCustomer as papa  left join c.office as off  left join c.personnel as per, org.mifos.application.customer.util.valueobjects.CustomerNameDetail as cnd  where (((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) and (off.searchId like :OFFICE_SEARCH_ID) and ( ((c.customerLevel.levelId !=:LEVELID) and (c.displayName like :SEARCH_STRING)) or ((c.customerLevel.levelId =:LEVELID) and (cnd.customer.customerId=c.customerId) and (cnd.nameType=:CLIENTNAMETYPE) and (cnd.firstName like :SEARCH_STRING or cnd.lastName like :SEARCH_STRING or cnd.secondLastName like :SEARCH_STRING )))) order by c.customerLevel.levelId,cnd.lastName,cnd.firstName,c.displayName]]>
        </query>
        <query name="Customer.count_search_noofficeid">
	        	   <![CDATA[select  count(distinct c.customerId) from  org.mifos.application.customer.util.valueobjects.Customer as c left join c.parentCustomer as pa left join pa.parentCustomer as papa  left join c.office as off  left join c.personnel as per, org.mifos.application.customer.util.valueobjects.CustomerNameDetail as cnd  where  (((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) and (off.searchId like :OFFICE_SEARCH_ID) and ( ((c.customerLevel.levelId !=:LEVELID) and (c.displayName like :SEARCH_STRING)) or ((c.customerLevel.levelId =:LEVELID) and (cnd.customer.customerId=c.customerId) and (cnd.nameType=:CLIENTNAMETYPE) and (cnd.firstName like :SEARCH_STRING or cnd.lastName like :SEARCH_STRING or cnd.secondLastName like :SEARCH_STRING )))) order by c.customerLevel.levelId,cnd.lastName,cnd.firstName,c.displayName ]]>
        </query>
        
        <query name="Customer.search_noofficeid_noclients">
	        	   <![CDATA[select  distinct c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.levelId,off.officeId,off.officeName,per.displayName,per.personnelId,c.statusId,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum from  org.mifos.application.customer.util.valueobjects.Customer as c left join c.parentCustomer as pa left join pa.parentCustomer as papa  left join c.office as off  left join c.personnel as per  where ( ((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) and (off.searchId like :OFFICE_SEARCH_ID) and (c.customerLevel.levelId !=:LEVELID) and (c.displayName like :SEARCH_STRING))  order by c.customerLevel.levelId,c.displayName]]>
        </query>
        <query name="Customer.count_search_noofficeid_noclients">
	        	   <![CDATA[select  count(distinct c.customerId) from  org.mifos.application.customer.util.valueobjects.Customer as c left join c.parentCustomer as pa left join pa.parentCustomer as papa  left join c.office as off  left join c.personnel as per  where ( ((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) and (off.searchId like :OFFICE_SEARCH_ID) and (c.customerLevel.levelId !=:LEVELID) and (c.displayName like :SEARCH_STRING))  order by c.customerLevel.levelId,c.displayName]]>
        </query>
        
        <query name="Customer.idsearch">
	        	   <![CDATA[select c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.levelId, off.officeId,off.officeName,per.displayName,per.personnelId,c.statusId,pa.displayName, pa.globalCustNum, papa.displayName,papa.globalCustNum  from org.mifos.application.customer.util.valueobjects.Customer as c left join c.parentCustomer as pa left join pa.parentCustomer as papa left join c.office as off  left join c.personnel as per where c.office.officeId=:OFFICEID and c.globalCustNum=:SEARCH_STRING ]]>
        </query>
        <query name="Customer.idsearch_withoutoffice">
	        	   <![CDATA[select c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.levelId, off.officeId,off.officeName,per.displayName,per.personnelId,c.statusId,pa.displayName, pa.globalCustNum, papa.displayName,papa.globalCustNum  from org.mifos.application.customer.util.valueobjects.Customer as c left join c.parentCustomer as pa left join pa.parentCustomer as papa left join c.office as off  left join c.personnel as per where  c.globalCustNum=:SEARCH_STRING ]]>
        </query>
        
        <query name="Customer.fetchLoanCounters">
	        	   <![CDATA[select lo.loanOffering.prdOfferingName from org.mifos.application.accounts.loan.util.valueobjects.Loan as lo where lo.customer.customerId=:customerId and lo.loanOffering.loanCounterFlag=1 and lo.accountStateId in (3,4,5,6,9) order by lo.loanOffering.prdOfferingName asc]]>
        </query>
        
         <!-- <query name="updateChildPersonnel">
	        	   <![CDATA[update Customer customer set customer.personnel.personnelId=:PERSONNEL_ID where customer.customerId=:CUSTOMER_ID]]>
        </query>  -->
        
        <query name="numberOfMeetingsAttended">
	        	   <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientAttendanceBO customerAttendance where customerAttendance.meetingDate > :DATEONEYEARBEFORE and customerAttendance.attendance in (1,4) and customerAttendance.id in (select max(custAttendance.id) from org.mifos.application.customer.client.business.ClientAttendanceBO custAttendance where custAttendance.customer.customerId=:CUSTOMERID group by custAttendance.meetingDate )]]>
        </query>
        <query name="numberOfMeetingsMissed">
	        	   <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientAttendanceBO customerAttendance where customerAttendance.meetingDate > :DATEONEYEARBEFORE and customerAttendance.attendance in (2,3) and customerAttendance.id in (select max(custAttendance.id) from org.mifos.application.customer.client.business.ClientAttendanceBO custAttendance where custAttendance.customer.customerId=:CUSTOMERID group by custAttendance.meetingDate )]]>
        </query>
        <query name="count_groupSearchWithoutCenter">
	        	   <![CDATA[select count(*) from Customer customer where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) and customer.office.searchId like :SEARCH_ID and customer.displayName like :SEARCH_STRING and customer.customerLevel.levelId =:LEVEL_ID and customer.statusId!=:STATUS1 and customer.statusId!=:STATUS2 ORDER BY customer.office.officeName,customer.displayName]]>
        </query>
</hibernate-mapping>
