<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<hibernate-mapping>
	<class name="org.mifos.application.customer.business.CustomerBO" table="CUSTOMER">
		<id name="customerId" column="CUSTOMER_ID" type="integer" unsaved-value="-1"  access="field">
			<generator class="native" />
		</id>
		<discriminator>
			<column name="DISCRIMINATOR" />
		</discriminator>
		<version name="versionNo" column="VERSION_NO" type="integer" unsaved-value="null" />
		<property name="globalCustNum" column="GLOBAL_CUST_NUM" type="string" access="field"/>
		<property name="displayName" column="DISPLAY_NAME" type="string" />

		<property name="displayAddress" column="DISPLAY_ADDRESS" type="string" />
		<property name="externalId" column="EXTERNAL_ID" type="string" />
		<property name="trained" column="TRAINED" type="short" access="field"/>
		<property name="trainedDate" column="TRAINED_DATE" type="date" />
		<property name="createdDate" column="CREATED_DATE" type="date" />
		<property name="updatedDate" column="UPDATED_DATE" type="date" />
		<property name="mfiJoiningDate" column="MFI_JOINING_DATE" type="date" />
		<property name="searchId" column="SEARCH_ID" type="string" />
		<property name="maxChildCount" column="MAX_CHILD_COUNT" type="integer" />
		<property name="createdBy" column="CREATED_BY" />
		<property name="updatedBy" column="UPDATED_BY" />
		<property name="blackListed" column="BLACKLISTED" access="field"/>
		<property name="customerActivationDate" column="CUSTOMER_ACTIVATION_DATE " not-null="false" access="field"/>
		<many-to-one name="customerStatus" column="STATUS_ID" class="org.mifos.application.customer.business.CustomerStatusEntity" insert="true" update="true" unique="true" lazy="true" />
		<many-to-one name="customerLevel" column="CUSTOMER_LEVEL_ID" class="org.mifos.application.customer.business.CustomerLevelEntity" insert="true" update="true" unique="true" lazy="true" access="field"/>
		<many-to-one name="personnel" column="LOAN_OFFICER_ID" class="org.mifos.application.personnel.business.PersonnelBO" unique="true" lazy="true" insert="true" update="true" />
		<many-to-one name="customerFormedByPersonnel" column="CUSTOMER_FORMEDBY_ID" class="org.mifos.application.personnel.business.PersonnelBO" unique="true" lazy="true" insert="true" update="true" />
		<many-to-one name="office" column="BRANCH_ID" class="org.mifos.application.office.business.OfficeBO" unique="true" lazy="true" insert="true" update="true" access="field"/>
		<one-to-one name="customerAddressDetail" class="org.mifos.application.customer.business.CustomerAddressDetailEntity" cascade="all" lazy="true" property-ref="customer" />
		<many-to-one name="parentCustomer" column="PARENT_CUSTOMER_ID" class="org.mifos.application.customer.business.CustomerBO" cascade="none" insert="true" unique="true" update="true" lazy="true" />
		<one-to-one name="historicalData" class="org.mifos.application.customer.business.CustomerHistoricalDataEntity" cascade="all" lazy="true" property-ref="customer" />
		<one-to-one name="customerMeeting" class="org.mifos.application.customer.business.CustomerMeetingEntity" cascade="all" lazy="true" property-ref="customer" />
		<!--<set name="customFields" lazy="false"
			table="CUSTOMER_CUSTOM_FIELD">
			<key column="CUSTOMER_ID" />
			<composite-element
			class="org.mifos.application.customer.business.CustomerCustomFieldEntity">
			
			<property name="fieldId" column="FIELD_ID"
			not-null="true" />
			<property name="fieldValue" column="FIELD_VALUE" />
			</composite-element>
			</set> -->
		<set name="customFields" cascade="all" lazy="true" access="field">
			<key column="CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerCustomFieldEntity" />
		</set>
		<set name="customerHierarchies" cascade="all" lazy="true" access="field">
			<key column="CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerHierarchyEntity" />
		</set>
		<set name="customerPositions" cascade="all" lazy="true">
			<key column="PARENT_CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerPositionEntity" />
		</set>

		<set name="accounts" cascade="all" table="ACCOUNT" lazy="true" access="field">
			<key column="CUSTOMER_ID" />
			<one-to-many class="org.mifos.application.accounts.business.AccountBO" />
		</set>
		<set name="customerNotes" cascade="all" inverse="true"
			table="CUSTOMER_NOTE" lazy="true" order-by="COMMENT_ID desc">
			<key column="CUSTOMER_ID" />
			<many-to-many
				class="org.mifos.application.customer.business.CustomerNoteEntity"
				column="COMMENT_ID" />
		</set>
		<set name="customerFlags" cascade="all" lazy="true">
			<key column="CUSTOMER_ID" not-null="true"/>
			<one-to-many class="org.mifos.application.customer.business.CustomerFlagDetailEntity" />
		</set>
		<subclass name="org.mifos.application.customer.center.business.CenterBO" discriminator-value="CENTER"></subclass>

		<subclass name="org.mifos.application.customer.group.business.GroupBO" discriminator-value="GROUP">
			<one-to-one name="performanceHistory" class="org.mifos.application.customer.group.business.GroupPerformanceHistoryEntity" cascade="all" lazy="true" property-ref="group" />
		</subclass>
		<subclass name="org.mifos.application.customer.client.business.ClientBO" discriminator-value="CLIENT">
			<property name="governmentId" column="GOVERNMENT_ID" type="string" />
			<property name="dateOfBirth" column="DATE_OF_BIRTH" type="date" />
			<property name="groupFlag" column="GROUP_FLAG" type="short" access="field"/>
			<one-to-one name="customerDetail" class="org.mifos.application.customer.client.business.ClientDetailEntity" cascade="all" lazy="true" />
			<one-to-one name="customerPicture" class="org.mifos.application.customer.client.business.CustomerPictureEntity" cascade="all" lazy="true" />
			<set name="nameDetailSet" cascade="all">
				<key column="CUSTOMER_ID" />
				<one-to-many class="org.mifos.application.customer.client.business.ClientNameDetailEntity" />
			</set>
			<set name="clientAttendances" cascade="all" inverse="true">
				<key column="CUSTOMER_ID" />
				<one-to-many class="org.mifos.application.customer.client.business.ClientAttendanceBO" />
			</set>
			<one-to-one name="performanceHistory" class="org.mifos.application.customer.client.business.ClientPerformanceHistoryEntity" cascade="all" lazy="true" property-ref="client" access="field"/>
		</subclass>

	</class>
	<!-- This query obtains  the customer with the specified loan office id,officeid,customerlevelid -->
	<query name="Customer.getParentCustomersForLoanOfficer">
		<![CDATA[select new org.mifos.application.customer.business.CustomerView(customer.customerId,customer.displayName,customer.customerLevel.id,customer.searchId) from  org.mifos.application.customer.business.CustomerBO customer where customer.personnel.personnelId=:personnelId and 
	        	   		customer.office.officeId=:officeId and customer.customerLevel.id=:customerLevelId and customer.customerStatus.id in (13,9,10) order by customer.displayName ]]>
	</query>
	<query name="Customer.getActiveChildrenForParent">
		<![CDATA[select new org.mifos.application.customer.business.CustomerView(customer.customerId,customer.displayName,customer.parentCustomer.customerId,customer.customerLevel.id) from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerStatus.id in (3,4,9,10) order by customer.displayName]]>
	</query>
	<query name="Customer.getChildrenForParent">
		<![CDATA[select customer.customerId from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID order by customer.customerId]]>
	</query>
	<query name="Customer.getLoanProductForCustomer">
		<![CDATA[select distinct account.loanOffering
			from org.mifos.application.accounts.loan.business.LoanBO account,
			org.mifos.application.accounts.loan.business.LoanScheduleEntity actionDate
			where account.customer.personnel.personnelId=:personnelId
			and account.customer.searchId like :searchId and 
			account.accountId=actionDate.account.accountId and 
			account.customer.customerId=actionDate.customer.customerId
			and account.loanOffering.prdOfferingId != null 
			and ((actionDate.actionDate=:meetingDate and  
			account.accountState.id in (5,9)) or (
			account.accountState.id in (3,4) and account.disbursementDate<=:meetingDate)) 
			order by account.customer.customerLevel.id,account.loanOffering.prdOfferingShortName]]>
	</query>
	<query name="Customer.getSavingsProductForCustomer">
		<![CDATA[select distinct account.savingsOffering
			from org.mifos.application.accounts.savings.business.SavingsBO account,
			org.mifos.application.accounts.savings.business.SavingsScheduleEntity actionDate
			where account.accountId=actionDate.account.accountId 
			and actionDate.actionDate=:meetingDate and account.savingsOffering.prdOfferingId != null 
			and account.customer.personnel.personnelId=:personnelId
			and account.customer.searchId like :searchId and account.accountState.id=16
			and (account.customer.customerId=actionDate.customer.customerId
			or account.customer.customerLevel.id=3
			or (account.customer.customerLevel.id=2 and 
			account.savingsOffering.recommendedAmntUnit.recommendedAmntUnitId=1)) 
			order by account.customer.customerLevel.id,account.savingsOffering.prdOfferingShortName]]>
	</query>
	<query name="Customer.getChildren">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerLevel.id = :LEVEL_ID and customer.customerStatus.id not in (6,12) ]]>
	</query>
	<query name="Customer.getActiveLoanAccounts">
		<![CDATA[from org.mifos.application.accounts.loan.business.LoanBO as loan where loan.customer.customerId=:CUSTOMER_ID and loan.accountState.id in (1,2,3,4,5,9) ]]>
	</query>
	<query name="Customer.getActiveSavingsAccounts">
		<![CDATA[from org.mifos.application.accounts.savings.business.SavingsBO as savings where savings.customer.customerId=:CUSTOMER_ID and savings.accountState.id in (13,14,16,18) ]]>
	</query>
	<query name="customer.findBySystemId">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO customer where customer.globalCustNum = :globalCustNum ]]>
	</query>
	<query name="customer.findCenterSystemId">
		<![CDATA[from org.mifos.application.customer.center.business.CenterBO as center where center.globalCustNum = :globalCustNum ]]>
	</query>

	<query name="Customer.getCenterCount">
	    <![CDATA[select count(*) from org.mifos.application.customer.center.business.CenterBO as center where center.displayName=:DISPLAY_NAME]]>
    </query>
    
	<query name="customer.findGroupSystemId">
		<![CDATA[from org.mifos.application.customer.group.business.GroupBO as groups where groups.globalCustNum = :globalCustNum ]]>
	</query>
	<query name="customer.findClientSystemId">
		<![CDATA[from org.mifos.application.customer.client.business.ClientBO as client where client.globalCustNum = :globalCustNum ]]>
	</query>
	<query name="Customer.getAllChildren">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerLevel.id < :LEVEL_ID and customer.customerStatus.id in (3,4,9,10)]]>
	</query>
	<query name="Customer.getAllCustomers">
		<![CDATA[select customer.customerId from org.mifos.application.customer.business.CustomerBO as customer where customer.customerLevel.id =:LEVEL_ID ]]>
	</query>
	<query name="Customer.getActiveCustomerUnderParent">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerStatus.id in (3,4,9,10,13) order by customer.customerActivationDate]]>
	</query>
	<query name="Customer.getCustomerCountForOffice">
	    <![CDATA[select count(*) from org.mifos.application.customer.business.CustomerBO as customer where customer.customerLevel.id =:LEVEL_ID and customer.office.officeId =:OFFICE_ID]]>
    </query>
    <query name="Customer.getClientBasedOnGovtId">
	    <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientBO as client where client.customerLevel.id =:LEVEL_ID and client.governmentId =:GOVT_ID]]>
    </query>					  
	<query name="Customer.getClientBasedOnNameAndDateOfBirth">
	    <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientBO as client where (client.displayName = :clientName and client.customerLevel.id =:LEVELID and client.dateOfBirth =:DATE_OFBIRTH and :customerId = 0) or (:customerId != 0 and client.displayName = :clientName and client.customerLevel.id =:LEVELID and client.dateOfBirth =:DATE_OFBIRTH and client.customerId !=:customerId)]]>
    </query>				      	  
</hibernate-mapping>
