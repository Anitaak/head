<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<hibernate-mapping>
	<class name="org.mifos.application.customer.business.CustomerBO" 
		table="CUSTOMER">
		<id name="customerId" column="CUSTOMER_ID" type="integer" 
			unsaved-value="-1"  access="field">
			<generator class="native" />
		</id>
		
		<!-- Is this column just redundant with customerLevel?  It
		     would appear so... -->
		<discriminator>
			<column name="DISCRIMINATOR" />
		</discriminator>

		<version name="versionNo" column="VERSION_NO" type="integer" 
			unsaved-value="null" />
		<property name="globalCustNum" column="GLOBAL_CUST_NUM" 
			type="string" access="field"/>
		<property name="displayName" column="DISPLAY_NAME" type="string" />

		<property name="displayAddress" column="DISPLAY_ADDRESS" type="string" />
		<property name="externalId" column="EXTERNAL_ID" type="string" />
		<property name="trained" column="TRAINED" type="short" access="field"/>
		<property name="trainedDate" column="TRAINED_DATE" type="date" />
		<property name="createdDate" column="CREATED_DATE" type="date" />
		<property name="updatedDate" column="UPDATED_DATE" type="date" />
		<property name="mfiJoiningDate" column="MFI_JOINING_DATE" type="date" />
		<property name="searchId" column="SEARCH_ID" type="string" />
		<property name="maxChildCount" column="MAX_CHILD_COUNT" 
			type="integer" access="field"/>
		<property name="createdBy" column="CREATED_BY" />
		<property name="updatedBy" column="UPDATED_BY" />
		<property name="blackListed" column="BLACKLISTED" type="short" 
			access="field"/>
		<property name="customerActivationDate" 
			column="CUSTOMER_ACTIVATION_DATE " not-null="false" 
			access="field"/>
		<many-to-one name="customerStatus" column="STATUS_ID" 
			class="org.mifos.application.customer.business.CustomerStatusEntity" 
			insert="true" update="true" unique="true" />
		<many-to-one name="customerLevel" column="CUSTOMER_LEVEL_ID" 
			class="org.mifos.application.customer.business.CustomerLevelEntity" 
			insert="true" update="true" unique="true"  
			access="field"/>
		<many-to-one name="personnel" column="LOAN_OFFICER_ID" class="org.mifos.application.personnel.business.PersonnelBO" unique="true" insert="true" update="true" />
		<many-to-one name="formedByPersonnel" column="CUSTOMER_FORMEDBY_ID" class="org.mifos.application.personnel.business.PersonnelBO" unique="true" insert="true" update="true" access="field"/>
		<many-to-one name="office" column="BRANCH_ID" class="org.mifos.application.office.business.OfficeBO" unique="true" insert="true" update="true" />
		<one-to-one name="customerAddressDetail" class="org.mifos.application.customer.business.CustomerAddressDetailEntity" cascade="all" property-ref="customer" />
		<many-to-one name="parentCustomer" column="PARENT_CUSTOMER_ID" class="org.mifos.application.customer.business.CustomerBO" cascade="none" insert="true" unique="true" update="true" />
		<one-to-one name="historicalData" class="org.mifos.application.customer.business.CustomerHistoricalDataEntity" cascade="all" property-ref="customer" access="field"/>
		<one-to-one name="customerMeeting" class="org.mifos.application.customer.business.CustomerMeetingEntity" cascade="all" property-ref="customer" />
	
		<set name="customFields" cascade="all" lazy="true" access="field">
			<key column="CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerCustomFieldEntity" />
		</set>
		<set name="customerHierarchies" cascade="all" lazy="true" access="field">
			<key column="CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerHierarchyEntity" />
		</set>
		<set name="customerMovements" cascade="all" lazy="true" access="field">
			<key column="CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerMovementEntity" />
		</set>
		<set name="customerPositions" cascade="all" lazy="true" access="field">
			<key column="PARENT_CUSTOMER_ID" update="false" />
			<one-to-many class="org.mifos.application.customer.business.CustomerPositionEntity" />
		</set>

		<set name="accounts" cascade="all" table="ACCOUNT" lazy="true" access="field">
			<key column="CUSTOMER_ID" />
			<one-to-many class="org.mifos.application.accounts.business.AccountBO" />
		</set>
		<set name="customerNotes" cascade="all" inverse="true"
			table="CUSTOMER_NOTE" lazy="true" order-by="COMMENT_ID desc" access="field">
			<key column="CUSTOMER_ID" />
			<many-to-many
				class="org.mifos.application.customer.business.CustomerNoteEntity"
				column="COMMENT_ID" />
		</set>
		<set name="customerFlags" cascade="all,delete-orphan" lazy="true" access="field">
			<key column="CUSTOMER_ID" not-null="true" />
			<one-to-many class="org.mifos.application.customer.business.CustomerFlagDetailEntity" />
		</set>
		
		<set name="children"  inverse="true" access="field" lazy="true">
			<key column="PARENT_CUSTOMER_ID" />
			<one-to-many class="org.mifos.application.customer.business.CustomerBO" />
		</set>
		
		<subclass 
			name="org.mifos.application.customer.center.business.CenterBO" 
			discriminator-value="CENTER"></subclass>

		<subclass name="org.mifos.application.customer.group.business.GroupBO" 
			discriminator-value="GROUP">
			<one-to-one name="performanceHistory" 
				class="org.mifos.application.customer.group.business.GroupPerformanceHistoryEntity" 
				cascade="all" property-ref="group" />
		</subclass>
		<subclass name="org.mifos.application.customer.client.business.ClientBO" discriminator-value="CLIENT">
			<property name="governmentId" column="GOVERNMENT_ID" type="string" />
			<property name="dateOfBirth" column="DATE_OF_BIRTH" type="date" />
			<property name="groupFlag" column="GROUP_FLAG" type="short" 
				access="field"/>
			<property name="firstName" column="FIRST_NAME" access="field" />
	        <property name="lastName" column="LAST_NAME" access="field" />
    	    <property name="secondLastName" column="SECOND_LAST_NAME" access="field" />
			<one-to-one name="customerDetail" 
				class="org.mifos.application.customer.client.business.ClientDetailEntity" 
				cascade="all" />
			<one-to-one name="customerPicture" 
				class="org.mifos.application.customer.client.business.CustomerPictureEntity" 
				cascade="all" property-ref="customer" />
			<set name="nameDetailSet" cascade="all" access="field">
				<key column="CUSTOMER_ID" />
				<one-to-many class="org.mifos.application.customer.client.business.ClientNameDetailEntity" />
			</set>
			<set name="clientAttendances" cascade="all" inverse="true" access="field">
				<key column="CUSTOMER_ID" />
				<one-to-many class="org.mifos.application.customer.client.business.ClientAttendanceBO" />
			</set>
			<set name="offeringsAssociatedInCreate"  table="CLIENT_INITIAL_SAVINGS_OFFERING" inverse="true" cascade="save-update"  access="field" lazy="true">
				<key column="CUSTOMER_ID" />
				<many-to-many class="org.mifos.application.customer.client.business.ClientInitialSavingsOfferingEntity" column="CLIENT_OFFERING_ID"/>
			</set>
			<one-to-one name="performanceHistory" 
				class="org.mifos.application.customer.client.business.ClientPerformanceHistoryEntity" 
				cascade="all" property-ref="client" access="field"/>
		</subclass>

	</class>
	<!-- This query obtains  the customer with the specified loan office id,officeid,customerlevelid -->
	<query name="Customer.getParentCustomersForLoanOfficer">
		<![CDATA[select new org.mifos.application.customer.business.CustomerView(customer.customerId,customer.displayName,customer.customerLevel.id,customer.searchId) from  org.mifos.application.customer.business.CustomerBO customer where customer.personnel.personnelId=:personnelId and 
	        	   		customer.office.officeId=:officeId and customer.customerLevel.id=:customerLevelId and customer.customerStatus.id in (13,9,10) order by customer.displayName ]]>
	</query>
	<query name="Customer.getActiveChildrenForParent"><![CDATA[
		select new org.mifos.application.customer.business.CustomerView(
			customer.customerId,customer.displayName,
			customer.parentCustomer.customerId,customer.customerLevel.id) 
		from org.mifos.application.customer.business.CustomerBO as customer 
		where customer.searchId like :SEARCH_STRING and 
			customer.office.officeId = :OFFICE_ID and 
			customer.customerStatus.id in (3,4,9,10) 
		order by customer.displayName
		]]>
	</query>
	<query name="Customer.getChildrenForParent">
		<![CDATA[select customer.customerId 
		from org.mifos.application.customer.business.CustomerBO as customer 
		where customer.searchId like :SEARCH_STRING and 
			customer.office.officeId = :OFFICE_ID 
		order by customer.customerId]]>
	</query>
	<query name="Customer.getLoanProductForCustomer">
		<![CDATA[select distinct account.loanOffering
			from org.mifos.application.accounts.loan.business.LoanBO account,
			org.mifos.application.accounts.loan.business.LoanScheduleEntity actionDate
			where account.customer.personnel.personnelId=:personnelId
			and account.customer.searchId like :searchId and 
			account.accountId=actionDate.account.accountId and 
			account.customer.customerId=actionDate.customer.customerId
			and account.loanOffering.prdOfferingId != null 
			and ((actionDate.actionDate=:meetingDate and  
			account.accountState.id in (5,9)) or (
			account.accountState.id in (3,4) and account.disbursementDate<=:meetingDate)) 
			order by account.customer.customerLevel.id,account.loanOffering.prdOfferingShortName]]>
	</query>
	<query name="Customer.getSavingsProductForCustomer">
		<![CDATA[select distinct account.savingsOffering
			from org.mifos.application.accounts.savings.business.SavingsBO account,
			org.mifos.application.accounts.savings.business.SavingsScheduleEntity actionDate
			where account.accountId=actionDate.account.accountId 
			and actionDate.actionDate=:meetingDate and account.savingsOffering.prdOfferingId != null 
			and account.customer.personnel.personnelId=:personnelId
			and account.customer.searchId like :searchId and account.accountState.id=16
			and (account.customer.customerId=actionDate.customer.customerId
			or account.customer.customerLevel.id=3
			or (account.customer.customerLevel.id=2 and 
			account.savingsOffering.recommendedAmntUnit.id=1)) 
			order by account.customer.customerLevel.id,account.savingsOffering.prdOfferingShortName]]>
	</query>
	<query name="Customer.getChildrenOtherThanClosed"><![CDATA[
		from org.mifos.application.customer.business.CustomerBO as customer 
		where customer.searchId like :SEARCH_STRING and 
			customer.office.officeId = :OFFICE_ID and 
			customer.customerLevel.id = :LEVEL_ID and 
			customer.customerStatus.id not in (6,12)
		]]>
	</query>
	<query name="Customer.getChildrenOtherThanClosedAndCancelled">
		<![CDATA[
		from org.mifos.application.customer.business.CustomerBO as customer 
		where customer.searchId like :SEARCH_STRING and 
			customer.office.officeId = :OFFICE_ID and 
			customer.customerLevel.id = :LEVEL_ID and 
			customer.customerStatus.id not in (5,6,11,12) ]]>
	</query>
	<query name="Customer.getAllChildrenForCustomerLevel">
		<![CDATA[
		from org.mifos.application.customer.business.CustomerBO as customer 
		where customer.searchId like :SEARCH_STRING and 
		customer.office.officeId = :OFFICE_ID and 
		customer.customerLevel.id = :LEVEL_ID]]>
	</query>
	<query name="Customer.getActiveAndOnHoldChildren">
		<![CDATA[
		from org.mifos.application.customer.business.CustomerBO as customer 
		where customer.searchId like :SEARCH_STRING and 
		customer.office.officeId = :OFFICE_ID and 
		customer.customerLevel.id = :LEVEL_ID and 
		customer.customerStatus.id in (3,4,9,10)]]>
	</query>
	<query name="Customer.getActiveLoanAccounts">
		<![CDATA[
		from org.mifos.application.accounts.loan.business.LoanBO as loan 
		where loan.customer.customerId=:CUSTOMER_ID and 
		loan.accountState.id in (1,2,3,4,5,9) ]]>
	</query>
	<query name="Customer.getActiveSavingsAccounts">
		<![CDATA[
		from org.mifos.application.accounts.savings.business.SavingsBO 
			as savings 
		where savings.customer.customerId=:CUSTOMER_ID and 
			savings.accountState.id in (13,14,16,18) ]]>
	</query>
	<query name="customer.findBySystemId">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO customer where customer.globalCustNum = :globalCustNum ]]>
	</query>
	<query name="customer.findCountBySystemId">
		<![CDATA[select count(*) from org.mifos.application.customer.business.CustomerBO customer where customer.globalCustNum = :globalCustNum ]]>
	</query>
	
	<query name="customer.findCenterSystemId">
		<![CDATA[from org.mifos.application.customer.center.business.CenterBO as center where center.globalCustNum = :globalCustNum ]]>
	</query>

	<query name="Customer.getCenterCount">
	    <![CDATA[select count(*) from org.mifos.application.customer.center.business.CenterBO as center where center.displayName=:DISPLAY_NAME]]>
    </query>
    
     <query name="Customer.getGroupCountByGroupNameAndOffice">
	     <![CDATA[select count(*) from org.mifos.application.customer.group.business.GroupBO as gp where gp.displayName=:DISPLAY_NAME and gp.office.officeId=:OFFICE_ID]]>
     </query> 
        
	<query name="customer.findGroupSystemId">
		<![CDATA[from org.mifos.application.customer.group.business.GroupBO as groups where groups.globalCustNum = :globalCustNum ]]>
	</query>
	<query name="customer.findClientSystemId">
		<![CDATA[from org.mifos.application.customer.client.business.ClientBO as client where client.globalCustNum = :globalCustNum ]]>
	</query>
	<query name="Customer.getAllChildren">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerLevel.id < :LEVEL_ID and customer.customerStatus.id in (3,4,9,10)]]>
	</query>
	<query name="Customer.getAllCustomers">
		<![CDATA[select customer.customerId from org.mifos.application.customer.business.CustomerBO as customer where customer.customerLevel.id =:LEVEL_ID ]]>
	</query>
	<query name="Customer.getActiveCustomerUnderParent">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerStatus.id in (3,4,9,10,13) order by customer.customerActivationDate]]>
	</query>
	<query name="Customer.getCustomerCountForOffice">
	    <![CDATA[select count(*) from org.mifos.application.customer.business.CustomerBO as customer where customer.customerLevel.id =:LEVEL_ID and customer.office.officeId =:OFFICE_ID]]>
    </query>
    <query name="Customer.getClientBasedOnGovtId">
	    <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientBO as client where (client.customerLevel.id =:LEVEL_ID and client.governmentId =:GOVT_ID and :customerId = 0) or (:customerId != 0 and client.customerLevel.id =:LEVEL_ID and client.governmentId =:GOVT_ID and client.customerId !=:customerId)]]>
    </query>					  
	<query name="Customer.getClientBasedOnNameAndDateOfBirth">
 	    <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientBO as client where (client.displayName = :clientName and client.customerLevel.id =:LEVELID and client.dateOfBirth =:DATE_OFBIRTH and :customerId = 0) or (:customerId != 0 and client.displayName = :clientName and client.customerLevel.id =:LEVELID and client.dateOfBirth =:DATE_OFBIRTH and client.customerId !=:customerId)]]>

<!--  NOTE: care must be taken with the query above to use java.sql.Date objects and not java.util.Date objects when clients
		A more defensive query would be as below, where we explicity ignore time information more fine grained than "day".
		Unfortunately, Mayfly can't deal with the generated SQL at this time.
		
	    <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientBO as client 
	    where (client.displayName = :clientName and client.customerLevel.id =:LEVELID and 
	    day(client.dateOfBirth) = day(:DATE_OFBIRTH) and 
	    month(client.dateOfBirth) = month(:DATE_OFBIRTH) and
	    year(client.dateOfBirth) = year(:DATE_OFBIRTH) and
	    :customerId = 0) or 
	    (:customerId != 0 and client.displayName = :clientName and client.customerLevel.id =:LEVELID and 
	    day(client.dateOfBirth) = day(:DATE_OFBIRTH) and 
	    month(client.dateOfBirth) = month(:DATE_OFBIRTH) and
	    year(client.dateOfBirth) = year(:DATE_OFBIRTH) and
	    client.customerId !=:customerId)]]>
 -->	    
  </query>
    <query name="Customer.getAttedanceForOffice">
	    <![CDATA[select new org.mifos.application.bulkentry.business. BulkEntryClientAttendanceView( client.customerId,
			clientAttendance.attendance, clientAttendance.meetingDate)   
			from org.mifos.application.customer.client.business.ClientBO client,
			org.mifos.application.customer.client.business.ClientAttendanceBO clientAttendance
			where 
			client.customerId = clientAttendance.customer.customerId
			and client.office.officeId = :OFFICE_ID
			and clientAttendance.meetingDate = :MEETING_DATE	]]>
    </query>				      	  
  
    
    <query name="Customer.getLOForCustomer">
	    <![CDATA[select customer.personnel.personnelId from org.mifos.application.customer.business.CustomerBO as customer where customer.customerId =:CUSTOMER_ID)]]>
    </query>  
    
    	<query name="customer.viewallclosedaccounts">
		<![CDATA[from org.mifos.application.accounts.business.AccountBO account where account.customer.customerId=:customerId
					and account.accountType.accountTypeId=:accountTypeId and account.accountState.id in(6,7,8,10,15,17) ]]>
	</query>	
	<query name="Customer.getActiveCustomersForLO">
	        	   <![CDATA[select count(*) from org.mifos.application.customer.business.CustomerBO as customer where customer.personnel.personnelId=:userId and customer.office.officeId=:officeId and customer.customerStatus.id not in (5,6,11,12,14) ]]>
    </query>
    <query name="Customer.getAllCustomersForLO">
	        	   <![CDATA[select count(*) from org.mifos.application.customer.business.CustomerBO as customer where customer.personnel.personnelId=:userId and customer.office.officeId=:officeId ]]>
    </query> 
    <query name="Customer.getActiveCustomerWithSearchId">
		<![CDATA[from org.mifos.application.customer.business.CustomerBO as customer where customer.searchId=:SEARCH_STRING and customer.office.officeId = :OFFICE_ID and customer.customerStatus.id in (3,4,9,10,13) order by customer.customerActivationDate]]>
	</query>
	<query name="Customer.fetchLoanCounters">
	        	   <![CDATA[select lo.loanOffering.prdOfferingName from org.mifos.application.accounts.loan.business.LoanBO as lo where lo.customer.customerId=:customerId and lo.loanOffering.loanCounter=1 and lo.accountState.id in (3,4,5,6,9) order by lo.loanOffering.prdOfferingName asc]]>
        </query> 
        
    <query name="Customer.cust_count_search">
	        	   <![CDATA[select count(*) 
	        	   from org.mifos.application.customer.business.CustomerBO as c  
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per 
	        	   where ( 
	        	         (:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) 
	        	         or :USERLEVEL_ID!=:LOID) 
	        	         and c.office.officeId=:OFFICEID 
	        	         and ((c.customerLevel.id !=:LEVELID and c.displayName like :SEARCH_STRING) 
	        	              or (c.customerLevel.id =:LEVELID 
	        	              
	        	               
	        	              and (c.firstName like :SEARCH_STRING 
	        	              or c.lastName like :SEARCH_STRING 
	        	              or c.secondLastName like :SEARCH_STRING
	        	              or (c.firstName like :SEARCH_STRING1 and c.lastName like :SEARCH_STRING2 )
	        	              
	        	              )
	        	              
	        	               )
	        	         ) ]]>
        </query>
        <query name="Customer.cust_search">
	        	   <![CDATA[select  c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id,off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum 
	        	   from org.mifos.application.customer.business.CustomerBO as c  
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per  
	        	   where ( 
	        	         (:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) 
	        	         or :USERLEVEL_ID!=:LOID) 
	        	         and c.office.officeId=:OFFICEID 
	        	         and ((c.customerLevel.id !=:LEVELID and c.displayName like :SEARCH_STRING) 
	        	              or (c.customerLevel.id =:LEVELID 
	        	              
	        	               
	        	              and (c.firstName like :SEARCH_STRING 
	        	              or c.lastName like :SEARCH_STRING 
	        	              or c.secondLastName like :SEARCH_STRING
	        	              or (c.firstName like :SEARCH_STRING1 and c.lastName like :SEARCH_STRING2 )
	        	              )
	        	               )
	        	         ) order by c.customerLevel.id,c.lastName,c.firstName]]>
        </query> 
        <query name="Customer.cust_search_noofficeid">
	        	   <![CDATA[select   c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id,off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum from 
	        	    org.mifos.application.customer.business.CustomerBO as c 
	        	    left join c.parentCustomer as pa 
	        	    left join pa.parentCustomer as papa  
	        	    left join c.office as off  
	        	    left join c.personnel as per
                    where ( 
                    		((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) 
                         and (off.searchId like :OFFICE_SEARCH_ID) 
                         and (
                               (c.customerLevel.id in (2,3)  and c.displayName like :SEARCH_STRING) 
                    		   or (c.customerLevel.id =:LEVELID and (c.firstName like :SEARCH_STRING or c.lastName like :SEARCH_STRING or c.secondLastName like :SEARCH_STRING 
                    		   or (c.firstName like :SEARCH_STRING1 and c.lastName like :SEARCH_STRING2 )
                    		   ))
                    		   )
                    		 ) 
                    order by c.customerLevel.id,c.lastName,c.firstName]]>
        </query>
        <query name="Customer.cust_count_search_noofficeid">
	        	   <![CDATA[select  count(c.customerId) from  
	        	    org.mifos.application.customer.business.CustomerBO as c 
	        	    left join c.parentCustomer as pa left join pa.parentCustomer as papa  
	        	    left join c.office as off  
	        	    left join c.personnel as per 
                    where ( 
                    		((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) 
                         and (off.searchId like :OFFICE_SEARCH_ID) 
                         and (
                               (c.customerLevel.id in (2,3)  and c.displayName like :SEARCH_STRING) 
                    		   or (c.customerLevel.id =:LEVELID and (c.firstName like :SEARCH_STRING or c.lastName like :SEARCH_STRING or c.secondLastName like :SEARCH_STRING 
                    		   or (c.firstName like :SEARCH_STRING1 and c.lastName like :SEARCH_STRING2 )
                    		   ))
                    		   )
                    		 ) 
					]]>
        </query>
        
    <query name="Customer.cust_count_search_first_and_last_name">
	        	   <![CDATA[select count(*) 
	        	   from org.mifos.application.customer.business.CustomerBO as c  
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per 
	        	   where ( 
	        	         (:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) 
	        	         or :USERLEVEL_ID!=:LOID) 
	        	         and c.office.officeId=:OFFICEID 
	        	         and c.customerLevel.id =:LEVELID 
	        	              and (c.firstName like :SEARCH_STRING1 
	        	              and  c.lastName like :SEARCH_STRING2 
	        	         ) ]]>
        </query>
       <query name="Customer.cust_search_first_and_last_name">
	        	   <![CDATA[select  c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id,off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum 
	        	   from org.mifos.application.customer.business.CustomerBO as c  
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per  
	        	   where ((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) 
	        	         or :USERLEVEL_ID!=:LOID) 
	        	         and c.office.officeId=:OFFICEID 
	        	         and ((c.customerLevel.id =:LEVELID 
	        	              and (c.firstName like :SEARCH_STRING1 
	        	              and  c.lastName like :SEARCH_STRING2 
	        	              )
	        	               )
	        	         ) order by c.customerLevel.id,c.lastName,c.firstName]]>
        </query> 
       <query name="Customer.cust_search_noofficeid_first_and_last_name">
	        	   <![CDATA[select   c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id,off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum,papa.displayName,papa.globalCustNum from 
	        	    org.mifos.application.customer.business.CustomerBO as c 
	        	    left join c.parentCustomer as pa 
	        	    left join pa.parentCustomer as papa  
	        	    left join c.office as off  
	        	    left join c.personnel as per
                    where ( 
                    		((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) 
                         and (off.searchId like :OFFICE_SEARCH_ID) 
                         and ((c.customerLevel.id =:LEVELID and (c.firstName like :SEARCH_STRING1 and c.lastName like :SEARCH_STRING2  ))
                    		   )
                    		 ) 
                    order by c.customerLevel.id,c.lastName,c.firstName]]>
        </query>
        <query name="Customer.cust_count_search_noofficeid_first_and_last_name">
	        	   <![CDATA[select  count(c.customerId) from  
	        	    org.mifos.application.customer.business.CustomerBO as c 
	        	    left join c.parentCustomer as pa left join pa.parentCustomer as papa  
	        	    left join c.office as off  
	        	    left join c.personnel as per 
                    where ( 
                    		((:USERLEVEL_ID=:LOID and c.personnel.personnelId=:USERID) or (:USERLEVEL_ID!=:LOID)) 
                         and (off.searchId like :OFFICE_SEARCH_ID) 
                         and (
                               (c.customerLevel.id =:LEVELID and (c.firstName like :SEARCH_STRING1 and c.lastName like :SEARCH_STRING2 
                                ))
                    		   )
                    		 ) 
					]]>
        </query>

        <query name="Customer.cust_idsearch_withoutoffice">
	        	   <![CDATA[select c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id, off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum, papa.displayName,papa.globalCustNum  
	        	   from org.mifos.application.customer.business.CustomerBO as c 
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per where  c.globalCustNum=:SEARCH_STRING and off.searchId like :SEARCH_ID]]>
        </query>
        <query name="Customer.cust_idsearch">
	        	   <![CDATA[select c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id, off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum, papa.displayName,papa.globalCustNum  
	        	   from org.mifos.application.customer.business.CustomerBO as c 
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per where c.office.officeId=:OFFICEID and c.globalCustNum=:SEARCH_STRING and per.personnelId =:ID ]]>
        </query>

         <query name="Customer.cust_idsearch_withoutoffice_count">
	        	   <![CDATA[select count(*)
	        	   from org.mifos.application.customer.business.CustomerBO as c 
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per where  c.globalCustNum=:SEARCH_STRING and off.searchId like :SEARCH_ID]]>
        </query>
        <query name="Customer.cust_idsearch_count">
	        	   <![CDATA[select count(*)  
	        	   from org.mifos.application.customer.business.CustomerBO as c 
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per where c.office.officeId=:OFFICEID and c.globalCustNum=:SEARCH_STRING and per.personnelId =:ID ]]>
        </query>

        <query name="Customer.cust_idsearch_nonLo">
	        	   <![CDATA[select c.customerId ,c.displayName ,c.globalCustNum,c.customerLevel.id, off.officeId,off.officeName,per.displayName,per.personnelId,c.customerStatus.id,pa.displayName, pa.globalCustNum, papa.displayName,papa.globalCustNum  
	        	   from org.mifos.application.customer.business.CustomerBO as c 
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per where c.office.officeId=:OFFICEID and c.globalCustNum=:SEARCH_STRING and off.searchId like :SEARCH_ID ]]>
        </query>

       <query name="Customer.cust_idsearch_count_nonLo">
	        	   <![CDATA[select count(*)  
	        	   from org.mifos.application.customer.business.CustomerBO as c 
	        	   left join c.parentCustomer as pa 
	        	   left join pa.parentCustomer as papa 
	        	   left join c.office as off  
	        	   left join c.personnel as per where c.office.officeId=:OFFICEID and c.globalCustNum=:SEARCH_STRING and off.searchId like :SEARCH_ID ]]>
        </query>

        
         <query name="search_Centers">
	        	   <![CDATA[select  customer.office.officeId, customer.office.officeName,customer.globalCustNum,customer.displayName 
	        	   from org.mifos.application.customer.business.CustomerBO customer 
	        	   where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)
	        	   or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) 
	        	   and customer.office.searchId like :SEARCH_ID 
	        	   and customer.displayName like :CENTER_NAME 
	        	   and customer.customerLevel.id =:LEVEL_ID 
	        	   and customer.customerStatus.id = :STATUS_ID 
	        	   ORDER BY customer.office.officeName ,customer.displayName ]]>
        </query>
        
         <query name="count_search_Centers">
	        	   <![CDATA[select count(*) 
	        	   from org.mifos.application.customer.business.CustomerBO customer 
	        	   where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)
	        	   or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) 
	        	   and customer.office.searchId like :SEARCH_ID 
	        	   and customer.displayName like :CENTER_NAME 
	        	   and customer.customerLevel.id =:LEVEL_ID 
	        	   and customer.customerStatus.id = :STATUS_ID
	        	    ]]>
        </query>
        <query name="group_SearchWithCenter">
	        	   <![CDATA[select  customer.office.officeName,customer.displayName,customer.parentCustomer.displayName, customer.customerId 
	        	   from org.mifos.application.customer.business.CustomerBO customer 
	        	   where ((customer.personnel.personnelId=:USER_ID 
	        	   and :USER_LEVEL_ID=:LO_LEVEL_ID)
	        	   or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) 
	        	   and customer.office.searchId like :SEARCH_ID 
	        	   and customer.displayName like :SEARCH_STRING 
	        	   and customer.customerLevel.id =:LEVEL_ID 
	        	   and customer.customerStatus.id in (7,8,9,10) 
	        	   ORDER BY customer.office.officeName,customer.parentCustomer.displayName ,customer.displayName]]>
        </query>
        <query name="count_group_SearchWithCenter">
	        	   <![CDATA[select count(*) from 
	        	   org.mifos.application.customer.business.CustomerBO customer 
	        	   where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)
	        	   or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) 
	        	   and customer.office.searchId like :SEARCH_ID 
	        	   and customer.displayName like :SEARCH_STRING 
	        	   and customer.customerLevel.id =:LEVEL_ID 
	        	   and customer.customerStatus.id in (7,8,9,10) 
	        	   	]]>
        </query>
        <query name="group_SearchWithoutCenter">
	        	   <![CDATA[select  customer.office.officeName,customer.displayName,customer.customerId 
	        	   from org.mifos.application.customer.business.CustomerBO customer 
	        	   where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)
	        	   or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) 
	        	   and customer.office.searchId like :SEARCH_ID 
	        	   and customer.displayName like :SEARCH_STRING 
	        	   and customer.customerLevel.id =:LEVEL_ID 
	        	   and  customer.customerStatus.id in (7,8,9,10)
	        	   ORDER BY customer.office.officeName,customer.displayName]]>
        </query>
       <query name="count_group_SearchWithoutCenter">
	        	   <![CDATA[select count(*) 
	        	   from org.mifos.application.customer.business.CustomerBO customer 
	        	   where ((customer.personnel.personnelId=:USER_ID and :USER_LEVEL_ID=:LO_LEVEL_ID)
	        	   or(:USER_LEVEL_ID!=:LO_LEVEL_ID)) 
	        	   and customer.office.searchId like :SEARCH_ID 
	        	   and customer.displayName like :SEARCH_STRING 
	        	   and customer.customerLevel.id =:LEVEL_ID 
	        	   and  customer.customerStatus.id in (7,8,9,10) 
	        	   ]]>
        </query>
	<query name="Customer.cust_for_account">
		<![CDATA[select  cust.displayName,cust.customerId,customerOne.displayName,customerTwo.displayName,off.officeName,cust.globalCustNum  
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off 
		where (:GROUP_LOAN_ALLOWED=true 
				and cust.customerLevel.id =2 
				and off.searchId like :SEARCH_ID 
				and cust.personnel.personnelId=:PERSONNEL_ID  
				and cust.displayName like :SEARCH_STRING) 
			or (cust.customerLevel.id =1 
			    and (cust.displayName like :SEARCH_STRING 
			         or cust.lastName like :SEARCH_STRING 
			         or cust.secondLastName like :SEARCH_STRING 
			        ) 
			    and off.searchId like :SEARCH_ID 
			    and cust.personnel.personnelId=:PERSONNEL_ID 
			    and cust.customerStatus.id in (3,9)
			   ) order by  cust.customerLevel.id,cust.lastName,cust.firstName,cust.displayName ]]>				
	</query>
	<query name="Customer.count_cust_for_account">
		<![CDATA[select  count(*) 
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off 
		where (:GROUP_LOAN_ALLOWED=true 
				and cust.customerLevel.id =2 
				and off.searchId like :SEARCH_ID 
				and cust.personnel.personnelId=:PERSONNEL_ID  
				and cust.displayName like :SEARCH_STRING) 
			or (cust.customerLevel.id =1 
			    and (cust.displayName like :SEARCH_STRING 
			         or cust.lastName like :SEARCH_STRING 
			         or cust.secondLastName like :SEARCH_STRING 
			        ) 
			    and off.searchId like :SEARCH_ID 
			    and cust.personnel.personnelId=:PERSONNEL_ID 
			    and cust.customerStatus.id in (3,9)
			   ) ]]>				
	</query>
	<query name="Customer.cust_account_Search">
		<![CDATA[select cust.displayName,cust.customerId,customerOne.displayName,customerTwo.displayName,off.officeName,cust.globalCustNum  
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off
        where (:GROUP_LOAN_ALLOWED=true and cust.customerLevel.id =2 and cust.customerStatus.id =9 and cust.displayName like :SEARCH_STRING and off.searchId like :SEARCH_ID) 
		or (cust.customerLevel.id =1  and 
		      (cust.displayName like :SEARCH_STRING 
		       or cust.lastName like :SEARCH_STRING 
		       or cust.secondLastName like :SEARCH_STRING 
		      )
		   and off.searchId like :SEARCH_ID 
	   	  and cust.customerStatus.id =3
	   	)
        order by  cust.customerLevel.id,cust.lastName,cust.firstName,cust.displayName ]]>
	</query>
	
	
 	<query name="Customer.cust_count_account_Search">
		<![CDATA[select count(*)  
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off 
		where (:GROUP_LOAN_ALLOWED=true and cust.customerLevel.id =2 and cust.customerStatus.id =9 and cust.displayName like :SEARCH_STRING and off.searchId like :SEARCH_ID) 
		or (cust.customerLevel.id =1  and 
		      (cust.displayName like :SEARCH_STRING 
		       or cust.lastName like :SEARCH_STRING 
		       or cust.secondLastName like :SEARCH_STRING 
		      )
		   and off.searchId like :SEARCH_ID 
	   	  and cust.customerStatus.id =3
	   	) ]]>
	</query>
 <query name="Customer.customersForSavingsAccount">
		<![CDATA[select cust.displayName,cust.customerId,customerOne.displayName,customerTwo.displayName,off.officeName,cust.globalCustNum  
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off
		where ( ((cust.customerLevel.id =3 and cust.customerStatus.id =13) 
		        or (cust.customerLevel.id =2 and cust.customerStatus.id =9))  
		        and off.searchId like :SEARCH_ID and cust.personnel.personnelId=:PERSONNEL_ID  
		        and cust.displayName like :SEARCH_STRING) 
		        or (cust.customerLevel.id =1 
		            and (cust.displayName like :SEARCH_STRING 
		                or cust.lastName like :SEARCH_STRING 
		                or cust.secondLastName like :SEARCH_STRING ) 
		            and off.searchId like :SEARCH_ID 
		            and cust.personnel.personnelId=:PERSONNEL_ID 
		            and cust.customerStatus.id=3)
		             order by  cust.customerLevel.id,cust.lastName,cust.firstName,cust.displayName ]]>				
	</query>
	<query name="Customer.count_customersForSavingsAccount">
		<![CDATA[select count(*)  
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off
		where ( ((cust.customerLevel.id =3 and cust.customerStatus.id =13) 
		        or (cust.customerLevel.id =2 and cust.customerStatus.id =9))  
		        and off.searchId like :SEARCH_ID and cust.personnel.personnelId=:PERSONNEL_ID  
		        and cust.displayName like :SEARCH_STRING) 
		        or (cust.customerLevel.id =1 
		            and (cust.displayName like :SEARCH_STRING 
		                or cust.lastName like :SEARCH_STRING 
		                or cust.secondLastName like :SEARCH_STRING ) 
		            and off.searchId like :SEARCH_ID 
		            and cust.personnel.personnelId=:PERSONNEL_ID 
		            and cust.customerStatus.id=3) 
	    ]]>				
	</query>
	<query name="Customer.customersForSavingsAccountNonLO">
		<![CDATA[select  cust.displayName,cust.customerId,customerOne.displayName,customerTwo.displayName,off.officeName,cust.globalCustNum  
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off where (  ((cust.customerLevel.id =3 and cust.customerStatus.id =13) 
					or (cust.customerLevel.id =2 and cust.customerStatus.id =9)) 
				and cust.displayName like :SEARCH_STRING and off.searchId like :SEARCH_ID) 
				or (cust.customerLevel.id =1 
				    and (cust.displayName like :SEARCH_STRING 
				         or cust.lastName like :SEARCH_STRING 
				         or cust.secondLastName like :SEARCH_STRING ) 
				    and off.searchId like :SEARCH_ID 
				    and cust.customerStatus.id =3)
			 order by  cust.customerLevel.id,cust.lastName,cust.firstName,cust.displayName ]]>
	</query>
	
	
	<query name="Customer.count_customersForSavingsAccountNonLO">
		<![CDATA[select  count(*) 
		from org.mifos.application.customer.business.CustomerBO as cust 
		left join cust.parentCustomer as customerOne 
		left join customerOne.parentCustomer as customerTwo 
		left join cust.office as off
		where (  ((cust.customerLevel.id =3 and cust.customerStatus.id =13) 
					or (cust.customerLevel.id =2 and cust.customerStatus.id =9)) 
				and cust.displayName like :SEARCH_STRING and off.searchId like :SEARCH_ID) 
				or (cust.customerLevel.id =1 
				    and (cust.displayName like :SEARCH_STRING 
				         or cust.lastName like :SEARCH_STRING 
				         or cust.secondLastName like :SEARCH_STRING ) 
				    and off.searchId like :SEARCH_ID 
				    and cust.customerStatus.id =3) 
		   ]]>
	</query>
        <query name="Customer.get_loanofficer_centers">
	        	   <![CDATA[from  org.mifos.application.customer.business.CustomerBO customer 
	        	   				where customer.personnel.personnelId=:personnelId and 
	        	   				customer.office.officeId=:officeId and 
	        	   				customer.customerLevel.id=:customerLevelId 
	        	   				and customer.customerStatus.id=:CENTERACTIVE
	        	   	]]>
        </query>
        <query name="Customer.get_loanofficer_groups">
	        	   <![CDATA[from  org.mifos.application.customer.business.CustomerBO customer 
	        	   where customer.personnel.personnelId=:personnelId and 
	        	   	customer.office.officeId=:officeId and customer.customerLevel.id=:customerLevelId 
	        	   	and customer.customerStatus.id in (7,8,9,10)]]>
        </query>
		  <query name="numberOfMeetingsAttended">
		        	   <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientAttendanceBO customerAttendance where customerAttendance.meetingDate > :DATEONEYEARBEFORE and customerAttendance.attendance in (1,4) and customerAttendance.customer.customerId=:CUSTOMERID )]]>
	 </query>
	 <query name="numberOfMeetingsMissed">
		        	   <![CDATA[select count(*) from org.mifos.application.customer.client.business.ClientAttendanceBO customerAttendance where customerAttendance.meetingDate > :DATEONEYEARBEFORE and customerAttendance.attendance in (2,3) and customerAttendance.customer.customerId=:CUSTOMERID )]]>
	 </query>
	 <query name="Customer.getActiveClientsUnderParent">
		<![CDATA[from org.mifos.application.customer.client.business.ClientBO as client
				 where client.searchId like :SEARCH_STRING and client.office.officeId = :OFFICE_ID 
				 and client.customerStatus.id in (3,4) order by client.customerActivationDate]]>
	</query>
	<query name="Customer.getActiveClientsUnderGroup">
		<![CDATA[from org.mifos.application.customer.client.business.ClientBO as client
				 where client.parentCustomer  = :GROUP_ID 
				 and client.customerStatus.id in (3,4) order by client.customerActivationDate]]>
	</query>

</hibernate-mapping>
