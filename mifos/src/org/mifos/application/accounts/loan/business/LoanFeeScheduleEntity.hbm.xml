<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping>

	<class name="org.mifos.application.accounts.loan.business.LoanFeeScheduleEntity" table="LOAN_FEE_SCHEDULE">
		<id name="accountFeesActionDetailId" column="ACCOUNT_FEES_DETAIL_ID" type="integer" unsaved-value="null" access="field">
			<generator class="native" />
		</id>

		<version name="versionNo" column="VERSION_NO" type="integer" unsaved-value="null" />

		<property name="installmentId" column="INSTALLMENT_ID" access="field"/>
		<property name="feeAmount" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
			<column name="AMOUNT_CURRENCY_ID" />
			<column name="AMOUNT" />
		</property>
		<property name="feeAmountPaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
			<column name="AMOUNT_PAID_CURRENCY_ID" />
			<column name="AMOUNT_PAID" />
		</property>

		<many-to-one name="accountFee" column="ACCOUNT_FEE_ID" class="org.mifos.application.accounts.business.AccountFeesEntity" lazy="true" access="field"/>
		<many-to-one name="accountActionDate" column="ID" class="org.mifos.application.accounts.loan.business.LoanScheduleEntity" lazy="true" access="field"/>
		<many-to-one name="fee" column="FEE_ID" class="org.mifos.application.fees.business.FeeBO" lazy="true" access="field"/>

	</class>
	
	
	<query name="account.getAllAccountFeeForAllInstallmentsForAllLoanAcounts">
		<![CDATA[select new org.mifos.application.bulkentry.business.BulkEntryAccountFeeActionView(
			feeAction.accountActionDate.actionDateId, feeAction.fee,
			feeAction.feeAmount, feeAction.feeAmountPaid
			) from org.mifos.application.accounts.loan.business.LoanScheduleEntity as accountAction,
			org.mifos.application.customer.business.CustomerBO as customer,
			org.mifos.application.accounts.loan.business.LoanFeeScheduleEntity as feeAction 
			where customer.customerId = accountAction.customer.customerId
			and accountAction.actionDate <=:MEETING_DATE and accountAction.paymentStatus=:PAYMENT_STATUS
			and customer.searchId like :SEARCH_STRING and customer.office.officeId = :OFFICE_ID and 
			customer.customerStatus.id in (3,4,9,10,13) 
			and accountAction.actionDateId = feeAction.accountActionDate.actionDateId
			order by customer.customerId,
			accountAction.account.accountId,accountAction.actionDate,feeAction.accountActionDate.actionDateId
		]]>
	</query>

</hibernate-mapping>
