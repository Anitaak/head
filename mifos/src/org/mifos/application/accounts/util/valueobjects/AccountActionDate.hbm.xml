<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >


<hibernate-mapping>

    <class name="org.mifos.application.accounts.util.valueobjects.AccountActionDate" table="ACCOUNT_ACTIONS_DATE">
        <id name="actionDateId" column="ID" type="integer" unsaved-value="-1">
            <generator class="native"/>
        </id>
	<version name="versionNo" column="VERSION_NO" type="integer" unsaved-value="null"/>
	<property name="installmentId" column="INSTALLMENT_ID" />
        <property name="customerId" column="CUSTOMER_ID"  />
        <property name="currencyId" column="CURRENCY_ID" />
        <property name="actionDate" column="ACTION_DATE"   />
        <property name="parentFlag" column="PARENT_FLAG"   />
        <property name="paymentStatus" column="PAYMENT_STATUS"  />
		<property name="paymentDate" column="PAYMENT_DATE"/>
		<property name="deposit" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="DEPOSIT_CURRENCY_ID" /> 
		 <column name="DEPOSIT" />
		</property>
		<property name="principal" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="PRINCIPAL_CURRENCY_ID" /> 
		 <column name="PRINCIPAL" />
		</property>
		<property name="interest" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="INTEREST_CURRENCY_ID" /> 
		 <column name="INTEREST" />
		</property>
		<property name="penalty" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="PENALTY_CURRENCY_ID" /> 
		 <column name="PENALTY" />
		</property>		
		<property name="miscFee" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="MISC_FEES_CURRENCY_ID" /> 
		 <column name="MISC_FEES" />
		</property>
		<property name="miscPenaltyPaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="MISC_PENALTY_PAID_CURRENCY_ID" /> 
		 <column name="MISC_PENALTY_PAID" />
		</property>
		<property name="miscFeePaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="MISC_FEES_PAID_CURRENCY_ID" /> 
		 <column name="MISC_FEES_PAID" />
		</property>
		<property name="miscPenalty" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="MISC_PENALTY_CURRENCY_ID" /> 
		 <column name="MISC_PENALTY" />
		</property>
		<property name="depositPaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="DEPOSIT_PAID_CURRENCY_ID" /> 
		 <column name="DEPOSIT_PAID" />
		</property>
		<property name="principalPaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="PRINCIPAL_PAID_CURRENCY_ID" /> 
		 <column name="PRINCIPAL_PAID" />
		</property>
		<property name="interestPaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="INTEREST_PAID_CURRENCY_ID" /> 
		 <column name="INTEREST_PAID" />
		</property>
		<property name="penaltyPaid" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
		 <column name="PENALTY_PAID_CURRENCY_ID" /> 
		 <column name="PENALTY_PAID" />
		</property>		
		

       <many-to-one name="account" column="ACCOUNT_ID" class="org.mifos.application.accounts.util.valueobjects.Account" unique="true" lazy="true" cascade="none" insert="true" update="true"/>
      <set name="accountFeesActionDetail"  cascade="all" 	lazy="false">
            <key column="ID" update="false"   />
            <one-to-many   class="org.mifos.application.accounts.util.valueobjects.AccountFeesActionDetail"  />
      </set>	
      </class>
      
      <query name="Account.GetInstallmentId">
		<![CDATA[
			select max(accountAct.actionDateId) 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
			and accountAct.actionDate <= current_date
			and accountAct.paymentStatus != 1
		]]>
	  </query>
	  <query name="Account.GetIdForNextInstallment">
		<![CDATA[
			select accountAct1.actionDateId 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct1 
			where accountAct1.account.accountId = :accountId and accountAct1.installmentId = (
			select min(accountAct.installmentId) 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
			and accountAct.actionDate > current_date )
		]]>
	  </query> 	
      <query name="Account.GetIdForDueInstallments">
		<![CDATA[
			select accountAct.actionDateId 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
			and accountAct.paymentStatus !=1
			and accountAct.installmentId < :installmentId
		]]>
      </query>
      <query name="Account.GetInstallments">
		<![CDATA[
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId order by accountAct.installmentId asc
		]]>
      </query>
      <query name="Account.GetMaxInstallmentId">
		<![CDATA[
		    select accountAct.installmentId
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
		]]>
      </query>
      <query name="Account.isCurrentDayDueDate">
		<![CDATA[
			select accountAct.actionDateId 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
			and accountAct.actionDate = current_date)
		]]>
      </query> 
      <query name="Account.isCurrentDateGreaterThenFirstInstallmentDate">
		<![CDATA[
			select max(accountAct.installmentId) 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
			and accountAct.actionDate < current_date
		]]>
	  </query>
	  <query name="account.GetLastPaidInstallmentOnCurrentDate">
		<![CDATA[ 
			from org.mifos.application.accounts.util.valueobjects.AccountActionDate accountAct 
			where accountAct.account.accountId = :accountId 
			and accountAct.actionDate = current_date and accountAct.paymentStatus=:paymentStatus
		]]>
     </query>
	  
</hibernate-mapping>
