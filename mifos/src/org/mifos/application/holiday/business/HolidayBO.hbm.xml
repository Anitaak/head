<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >


<hibernate-mapping>

	<class name="org.mifos.application.holiday.business.HolidayBO" table="HOLIDAY">
		<composite-id
		        name="holidayPK"
		        class="org.mifos.application.holiday.business.HolidayPK" >       									
		        <key-property name="repaymentRuleId" column="REPAYMENT_RULE_ID" type="short"/>       
		        <key-property name="holidayFromDate" column="HOLIDAY_FROM_DATE" type="date" />
	        </composite-id>

	        <property name="holidayThruDate" column="HOLIDAY_THRU_DATE" type="date" />
		<property name="holidayName" column="HOLIDAY_NAME" type="string" />
	</class>

	<!-- Holiday Specific Queries  -->
	<query name="holiday.getHolidays">
   	       <![CDATA[select new org.mifos.application.holiday.business.HolidayBO(holidayBO.holidayPK, 
   	       				   holidayBO.holidayThruDate, holidayBO.holidayName, lvl.localeId, 
   	       				   lvl.lookUpValue)
 			          from org.mifos.application.holiday.business.HolidayBO holidayBO,
 			               org.mifos.application.holiday.business.RepaymentRuleEntity repaymentRule,
			               org.mifos.application.master.business.LookUpValueLocaleEntity lvl 
                     where lvl.lookUpId = repaymentRule.lookUpValue.lookUpId 
                       and lvl.localeId = :LOCALE_ID
                       and holidayBO.holidayPK.repaymentRuleId = repaymentRule.id
		               and holidayBO.holidayPK.holidayFromDate >= :START_OF_YEAR
                       and holidayBO.holidayPK.holidayFromDate <= :END_OF_YEAR
   	       ]]>
	</query>

	<!--
	<query name="account.statusChecklist">
   	       <![CDATA[from org.mifos.application.holiday.business.AccountHolidayBO  accountHoliday 
   	       where accountHoliday.holidayStatus=:holidayStatus 
   	       and accountHoliday.accountStateEntity.id=:accountStatus 
   	       and accountHoliday.productTypeEntity.productTypeID=:accountTypeId
   	       ]]>
    </query>
	<query name="customer.holiday">
		<![CDATA[from org.mifos.application.holiday.business.CustomerHolidayBO customerChecklist 
    	       			where customerChecklist.holidayStatus =:HOLIDAY_STATUS and customerChecklist.customerStatus.id=:STATUS_ID and customerChecklist.customerLevel.id =:LEVEL_ID
    	       			]]>
	</query>
	<query name="masterdata.customer_holiday">
		<![CDATA[select new org.mifos.application.holiday.util.helpers.HolidayMasterView(cl.id,ll.labelName) from org.mifos.application.customer.business.CustomerLevelEntity as cl,org.mifos.application.master.business.LookUpLabelEntity as ll where cl.lookUpValue.lookUpId=ll.lookUpEntity.entityId and ll.localeId=:localeId ]]>
	</query>
	<query name="masterdata.product_holiday">
		<![CDATA[select new org.mifos.application.holiday.util.helpers.HolidayMasterView(pt.productTypeID,lvl.lookUpValue) from org.mifos.application.productdefinition.business.ProductTypeEntity as pt,org.mifos.application.master.business.LookUpValueLocaleEntity as lvl where pt.lookUpValue.lookUpId=lvl.lookUpId and lvl.localeId=:localeId ]]>
	</query>
    <query name="customer.validateState">
    	<![CDATA[select count(*) from org.mifos.application.holiday.business.CustomerHolidayBO as ccl where ccl.customerLevel.id=:levelId and ccl.customerStatus.id=:stateId ]]>
	</query>
	<query name="product.validateState">
		<![CDATA[select count(*) from org.mifos.application.holiday.business.AccountHolidayBO as acChecklist where acChecklist.productTypeEntity.productTypeID=:levelId and acChecklist.accountStateEntity.id=:stateId]]>
	</query>
	
	<query name="holiday.loadAllCustomerHolidays">
		<![CDATA[from org.mifos.application.holiday.business.CustomerHolidayBO checkList ]]>
	</query>
	
	<query name="holiday.loadAllAccountHolidays">
		<![CDATA[from org.mifos.application.holiday.business.AccountHolidayBO checkList ]]>
	</query>
	 <query name="holiday.getStatusForCustomer">
		<![CDATA[from org.mifos.application.customer.business.CustomerStatusEntity customerState where customerState.customerLevel.id=:LEVEL_ID and customerState.id not in (1,7)]]>
	</query>
	<query name="holiday.getStatusForAccount">
		<![CDATA[from org.mifos.application.accounts.business.AccountStateEntity accountStateEntity 
    	where  accountStateEntity.prdType.productTypeID = :prdTypeId and accountStateEntity.id not in (1,5,6,9,11,12,13,17)]]>
	</query>

        -->

</hibernate-mapping>
