<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >


<hibernate-mapping>

    <class name="org.mifos.application.office.util.valueobjects.Office" table="OFFICE">
        <id name="officeId" column="OFFICE_ID" type="short">
            <generator class="native"/>
        </id>
           <version name="versionNo" column="VERSION_NO" type="integer">
               
        </version>
        
 	<property name="searchId" column="SEARCH_ID" type="string" />
    <property name="officeName" column="DISPLAY_NAME" type="string" />

    <property name="createdDate" column="CREATED_DATE" type="date">
    </property>
    <property name="updatedDate" column="UPDATED_DATE" type="date">
    </property>

    <property name="globalOfficeNum" column="GLOBAL_OFFICE_NUM" type="string">
    </property> 
    <many-to-one name="level" class="org.mifos.application.office.util.valueobjects.OfficeLevel"
    			column="OFFICE_LEVEL_ID" unique="true" insert="true" update="true">
    </many-to-one>
    <property name="maxChildCount" column="MAX_CHILD_COUNT" type="integer">
    </property>
       
    <property name="operationMode" column="LOCAL_REMOTE_FLAG" type="short">
    </property>
     
    <property name="createdBy" column="CREATED_BY"></property>   
    <property name="updatedBy" column="UPDATED_BY"></property>   
    
    <property name="shortName" column="OFFICE_SHORT_NAME" type="string" />
    
    <many-to-one name="parentOffice" class="org.mifos.application.office.util.valueobjects.Office"
    			column="PARENT_OFFICE_ID" unique="true" insert="true" update="true" lazy="true" cascade="none">
    </many-to-one>
       
    <many-to-one name="status" class="org.mifos.application.office.util.valueobjects.OfficeStatus"
    			column="STATUS_ID" unique="true" insert="true" update="true" lazy="true">
    </many-to-one>

    <many-to-one name="officeCode" class="org.mifos.application.office.util.valueobjects.OfficeCode"
    			column="OFFICE_CODE_ID" unique="true" insert="true" update="true" lazy="true">
    </many-to-one>
	
	<set name="customFieldSet" cascade="all" inverse="true"  table ="OFFICE_CUSTOM_FIELD">
		<key column = "OFFICE_ID"/>
		<one-to-many class="org.mifos.application.office.util.valueobjects.OfficeCustomField" />
	</set>

   <one-to-one name="address" class="org.mifos.application.office.util.valueobjects.OfficeAddress" cascade="all" property-ref="office" lazy="true" /> 

    </class>
     
   <query name="masterdata.branchParentOfficeActive">
   <![CDATA[select new org.mifos.application.office.util.valueobjects.BranchParentOffice(off.officeId,off.officeName) FROM org.mifos.application.office.util.valueobjects.Office off,org.mifos.application.office.util.valueobjects.OfficeLevel officeLevel,org.mifos.application.office.util.valueobjects.Office offChild where officeLevel.interactionFlag=1 and officeLevel.configured = 1 and offChild.level.levelId = officeLevel.levelId and offChild.parentOffice.officeId = off.officeId and off.status.statusId=:statusId and offChild.status.statusId=:statusId and ( offChild.searchId like :sid or offChild.searchId=:searchId) order by offChild.officeName]]>
   </query>
   <query name="masterdata.branchParentOffice">
   <![CDATA[select new org.mifos.application.office.util.valueobjects.BranchParentOffice(off.officeId,off.officeName) FROM org.mifos.application.office.util.valueobjects.Office off,org.mifos.application.office.util.valueobjects.OfficeLevel officeLevel,org.mifos.application.office.util.valueobjects.Office offChild where officeLevel.interactionFlag=1 and officeLevel.configured = 1 and offChild.level.levelId = officeLevel.levelId and offChild.parentOffice.officeId = off.officeId order by offChild.officeName]]>
   </query>
    <query name="masterdata.branchOfficeActive">
        <![CDATA[select new org.mifos.application.office.util.valueobjects.BranchOffice(office.officeId, office.officeName,office.parentOffice.officeId) from org.mifos.application.office.util.valueobjects.Office office where office.level.interactionFlag=1 and office.status.statusId=:statusId and ( office.searchId like :sid or office.searchId=:searchId) order by office.officeName]]>
     </query>   
    <query name="masterdata.branchOffice">
        <![CDATA[select new org.mifos.application.office.util.valueobjects.BranchOffice(office.officeId, office.officeName,office.parentOffice.officeId,office.status.statusId) from org.mifos.application.office.util.valueobjects.Office office where office.level.interactionFlag=1 order by office.officeName]]>
    </query>
    
    <query name="masterdata.centerForBranch">
            <![CDATA[select new org.mifos.application.customer.util.valueobjects.CustomerInformation(customer.globalCustNum , customer.displayName) from Customer customer where customer.office.officeId=:branchId and customer.statusId=:statusId]]>
    </query>
    <query name="getNoOfActiveChildren">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.parentOffice.officeId=:officeId and o.status.statusId=:statusId]]>
    </query>
    <query name="getNoOfChildren">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.parentOffice.officeId=:officeId ]]>
    </query>
    
        <query name="checkForNameAndShortNameUniqueNess">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.officeName=:displayName or o.shortName=:shortName]]>
    </query>
    
    <query name="getActiveOfficeWithLevel">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.level.levelId=:levelId]]>
    </query> 
    
    
     <query name="isInvalidValidOfficePresent">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office office where office.parentOffice.officeId=:parentOfficeId and office.level.levelId >=:inValidLevelId  and office.status.statusId=:statusId ]]>
    </query> 

        <query name="checkForNameUniqueNess">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.officeName=:displayName]]>
    </query>
        <query name="checkForShortNameUniqueNess">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.shortName=:shortName]]>
    </query>
    
    <!-- For Personnel -->
	 <query name="masterdata.officeMasterForBranchOffices">
        <![CDATA[select new org.mifos.application.office.util.valueobjects.OfficeMaster(office.officeId, office.officeName,office.level.levelId,office.versionNo) from org.mifos.application.office.util.valueobjects.Office office where office.level.interactionFlag=:interactionFlag and office.status.statusId=:statusId and office.searchId like :searchId]]>
    </query>
    
	 <query name="masterdata.officeMaster">
        <![CDATA[select new org.mifos.application.office.util.valueobjects.OfficeMaster(office.officeId, office.officeName,office.level.levelId,office.versionNo) from org.mifos.application.office.util.valueobjects.Office office where office.status.statusId=:statusId and office.searchId like :searchId order by office.level.levelId, office.officeName]]>
    </query>
    <query name="isOfficeActive">
            <![CDATA[select count(*) from org.mifos.application.office.util.valueobjects.Office o where o.officeId=:officeId and o.status.statusId=:statusId]]>
    </query>
     <query name="getOfficeSubObject">
            <![CDATA[select new org.mifos.application.office.util.helpers.OfficeSubObject(office.status.statusId,office.level.levelId) from org.mifos.application.office.util.valueobjects.Office office where office.officeId=:officeId ]]>
    </query>
	<query name="getMaxId">
            <![CDATA[select max(office.officeId) from org.mifos.application.office.util.valueobjects.Office office]]>
    </query>
    
    <query name="getOfficeSearchId">
            <![CDATA[select office.searchId from Office office where office.officeId = :OFFICE_ID]]>
    </query>
    
</hibernate-mapping>