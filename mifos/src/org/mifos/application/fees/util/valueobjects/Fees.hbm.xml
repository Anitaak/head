<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
                            "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                            "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >


<hibernate-mapping>

    <class name="org.mifos.application.fees.util.valueobjects.Fees" table="FEES">
        <id name="feeId" column="FEE_ID" type="short" unsaved-value="null">
            <generator class="native"/>
        </id>
        <version name="versionNo" column="VERSION_NO" type="integer" unsaved-value="null"/>  
        <property name="globalFeeNum" column="GLOBAL_FEE_NUM" type="string" />
        <property name="feeName" column="FEE_NAME" type="string" />
        <property name="officeId" column="OFFICE_ID" type="short" />
        <many-to-one name="glCodeEntity" column="GLCODE_ID" class="org.mifos.application.accounts.financial.business.GLCodeEntity"  lazy="true" insert="true" update="false" />
        <property name="status" column="STATUS" type="short" />
        <property name="rateOrAmount" column="RATE_OR_AMOUNT" type="double" />
        <property name="rateFlatFalg" column="RATE_FLAT_FALG" type="short" />
        <property name="formulaId" column="FORMULA_ID" type="short"   />
        <property name="createdDate" column="CREATED_DATE" type="date" />
        <property name="createdBy" column="CREATED_BY" type="integer" />
        <property name="updatedDate" column="UPDATED_DATE" type="date"   />
        <property name="updatedBy" column="UPDATED_BY" type="integer"  />
        <property name="updatedOfficeId" column="UPDATED_OFFICE_ID" type="short"   />
        <property name="categoryId" column="CATEGORY_ID" type="short"/>
        <property name="adminCheck" column="DEFAULT_ADMIN_FEE" type="string"/>
 
		<property name="rate" column="RATE" type="double" />
		<property name="feeAmount" type="org.mifos.framework.util.helpers.MoneyCompositeUserType">
			 <column name="FEE_AMOUNT_CURRENCY_ID" /> 
			 <column name="FEE_AMOUNT" />
		</property>
        <one-to-one name="feeFrequency" class="org.mifos.application.fees.util.valueobjects.FeeFrequency" cascade="all" property-ref="fee" lazy="false"/>
        <set name="feeLevelSet"  cascade="all" inverse="true" table="FEELEVEL">
          <key column="FEE_ID" not-null="false"/>
        	<one-to-many class="org.mifos.application.fees.util.valueobjects.FeeLevel" />
        </set>
        
    </class>
    <query name="masterdata.fees"><![CDATA[select new org.mifos.application.fees.util.valueobjects.FeeMaster(fees.feeId,fees.feeName,fees.rateOrAmount,fees.globalFeeNum) from org.mifos.application.fees.util.valueobjects.Fees as fees where fees.categoryId = :allCategoryId or fees.categoryId =:centerCategoryId and fees.status=1]]></query>
    <!-- This query obtains all the active fees which have not been assigned as part of administrative fees for a particualar level. The list of fees obtained will not be a distinct set -->
    <query name="masterdata.feeswithoutlevel"><![CDATA[select new org.mifos.application.fees.util.valueobjects.FeeMaster(fees.feeId,fees.feeName,fees.rateOrAmount,fees.globalFeeNum,fees.versionNo,fees.feeFrequency.feeFrequencyTypeId,fees.feeFrequency.feeMeetingFrequency.meetingId) from org.mifos.application.fees.util.valueobjects.Fees as fees, org.mifos.application.fees.util.valueobjects.FeeFrequency as feeFrequency where (fees.categoryId = :allCategoryId or fees.categoryId =:customerCategoryId) and feeFrequency.fee.feeId=fees.feeId and fees.status=:statusId and fees.feeId not in (select feelevel.feeId from org.mifos.application.fees.util.valueobjects.FeeLevel as feelevel where feelevel.levelId=:levelId)]]></query>
    <query name="viewproductfees"><![CDATA[select new org.mifos.application.fees.util.valueobjects.ViewFees(fees.feeId,fees.feeName,lookUp.lookUpValue,fees.status) from org.mifos.application.fees.util.valueobjects.Fees as fees,org.mifos.application.fees.util.valueobjects.CategoryType  category, org.mifos.application.master.util.valueobjects.LookUpValueLocale lookUp where fees.categoryId=category.categoryId and category.lookUpId = lookUp.lookUpId and lookUp.localeId=:localeId and fees.categoryId in (5) order by fees.feeName]]></query>
    <query name="viewclientfees"><![CDATA[select new org.mifos.application.fees.util.valueobjects.ViewFees(fees.feeId,fees.feeName,lookUp.lookUpValue,fees.status) from org.mifos.application.fees.util.valueobjects.Fees as fees,org.mifos.application.fees.util.valueobjects.CategoryType  category, org.mifos.application.master.util.valueobjects.LookUpValueLocale lookUp where fees.categoryId=category.categoryId and category.lookUpId = lookUp.lookUpId and lookUp.localeId=:localeId and fees.categoryId in (1,2,3,4) order by fees.feeName]]></query>
	<query name="getFeesWithFormmulaForLoan"><![CDATA[select new org.mifos.application.master.util.valueobjects.FeeFormulaMaster(fees.feeId ,lookUp.lookUpValue) from org.mifos.application.fees.util.valueobjects.Fees fees, org.mifos.application.fees.util.valueobjects.FeeFormula  formula, org.mifos.application.master.util.valueobjects.LookUpValueLocale lookUp where formula.lookUpId = lookUp.lookUpId and lookUp.localeId=:localeId and fees.categoryId=:categoryId and fees.formulaId=formula.feeFormulaId and fees.formulaId is not null]]></query>
    
    
</hibernate-mapping>
