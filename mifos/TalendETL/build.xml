<?xml version="1.0" encoding="UTF-8"?>
<project name="etl" default="compile" basedir=".">

	<property environment="env"/>
	<property name="build.compiler" value="modern"/>
	<property name="java.home" value="${env.JAVA_HOME}"/>
	<property name="conf.dir" value="${basedir}/conf"/>


	<property file="${conf.dir}/hibernate.properties"/>

	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="sql.dir" value="${basedir}/sql"/>
	<property name="build.dir" value="${basedir}/target"/>
	<property name="build.classes" value="${basedir}/target/classes"/>
	<property name="max.memory" value="1024M" />
			

		<property name="db.driver" value="com.mysql.jdbc.Driver"/>
	<property name="database.driver.jar" 
		value="./lib/mysql-connector-java-5.1.0-bin.jar"/>
	<path id="class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
        <pathelement location="${build.src.dir}"/>
        <pathelement location="${build.classes}"/>
	</path>
    <echo level="debug">CLASSPATH - ${java.class.path}</echo>

	<!--definitions & target for SVNant 
		To make the targets work (1) get svnant from http://subclipse.tigris.org/svnant.html
		(2) copy  svnClientAdapter.jar and svnant.jar to ${ANT_HOME}/lib
	-->
	<property name="src.revision" value="Unknown" />
	<condition property="svnant.installed">
		<and>
			<available file="${env.ANT_HOME}/lib/svnClientAdapter.jar"/>
			<available file="${env.ANT_HOME}/lib/svnant.jar"/>
		</and>
	</condition>

	<target name="svn-revision" if="svnant.installed"  description="Sets SVN revision">
		<typedef name="svn"  classname="org.tigris.subversion.svnant.SvnTask"  /> 	
		<svn javahl="false" >
			<status path="./build.xml" revisionProperty="src.revision" />
		</svn>
	</target>
	<!-- end definitions & target for svnant -->
	
	
	<target name="init">
		<tstamp>
			<format property="BUILD_ID" pattern="MMM-dd-yyyy hh:mm aa z" locale="en"/>
		</tstamp>
	</target>

	<target name="check_config">
		<fail message="JAVA_HOME not set. Please set JAVA_HOME" unless="env.JAVA_HOME"/>
		<!--check the jre version-->
	</target>

	<target name="make_dir">
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.classes}/conf"/>
	</target>
	
	<target name="copy_files">
		<copy todir="${build.classes}/conf">
			<fileset dir="${basedir}/conf">
				<include name="*" />
			</fileset>
		</copy>
		<copy todir="${build.classes}/bin">
			<fileset dir="${basedir}/bin">
				<include name="*" />
			</fileset>
		</copy>
		<copy todir="${build.classes}/lib">
			<fileset dir="${basedir}/lib">
				<include name="*" />
			</fileset>
		</copy>		
	</target>

	<target name="clean_src_classes" description="Cleans the source classes">
		<delete>
			<fileset dir="${build.classes}" includes="**/*.class"/>
		</delete>
	</target>

	<target name="clean" description="Cleans the temp build directory">
		<delete dir="${build.dir}"/>
	</target>

	<target name="compile" depends="init,make_dir,copy_files" 
		description="Compiles the source files">
		<javac srcdir="${src.dir}" 
		       destdir="${build.classes}" 
		       debug="${debug.flag}"
		       deprecation="on"
		       target="1.5"
		       includes="**/*.java"
		       excludes="${global.exclude}">
			<classpath refid="class.path"/>
		</javac>
		
		<jar basedir="${build.classes}"
	             destfile="${basedir}/target/mifos-etl.jar"
		 />
		
	</target>
	
	<target name="create_schema" description="creates the OLAP schema">
		<sql driver="${db.driver}" url="jdbc:mysql://${OLAP_DB_HOST}:${OLAP_DB_PORT}/" 
			userid="${OLAP_DB_USER}" password="${OLAP_DB_PASSWORD}"
			classpath="${database.driver.jar}">
			<transaction>
				Drop database if exists ${OLAP_DB_NAME};
				create database ${OLAP_DB_NAME};			
				use ${OLAP_DB_NAME};
			</transaction>
			<transaction src="./sql/group_status_dim.sql" />
			<transaction src="./sql/time_dim.sql" />
			<transaction src="./sql/office_dim.sql" />
			<transaction src="./sql/loan_officer_dim.sql" />
			<transaction src="./sql/center_dim.sql" />
			<transaction src="./sql/group_dim.sql" />
			<transaction src="./sql/client_dim.sql" />
			<transaction src="./sql/client_loan_account_dim.sql" />
			<transaction src="./sql/client_status_dim.sql" />
			<transaction src="./sql/client_loan_fact.sql" />
			<transaction src="./sql/client_status_fact.sql" />
			<transaction src="./sql/group_status_fact.sql" />
			<transaction src="./sql/populate_client_status.sql" />
			<transaction src="./sql/populate_group_status.sql" />
		</sql>
    </target>	
	
    <target name="execute_master_etl" depends="compile">
        <echo>Executing MifOS ETLs</echo>
    	
    	 <tstamp>
    	    <format property="start.etl" pattern="EEE, d MMM yyyy HH:mm:ss:S Z"/>
    	 </tstamp>    	

    	 <java
            classname="org_mifos_etl.masteretlloader.MasterETLLoader"
            maxmemory="${max.memory}"
            fork="true"
			dir="${basedir}">
            <arg value="context=Default"/>
            <classpath>
				<path refid="class.path"/>
				<pathelement location="${build.classes}"/>
            	<pathelement location="${conf.dir}"/>
            </classpath>
        </java>
 		 
    	<tstamp>
    		<format property="stop.etl" pattern="EEE, d MMM yyyy HH:mm:ss:S Z"/>
    	</tstamp> 
    	<echo>Successfully executed all the ETLs</echo>
    	<echo>ETL Execution started at  :${start.etl}</echo>
    	<echo>ETL Execution finished at :${stop.etl}</echo>
    	
    </target>	

</project>
