<?xml version="1.0" encoding="UTF-8"?>
<project name="etl" default="compile" basedir=".">

	<property environment="env"/>
	<property name="build.compiler" value="modern"/>
	<property name="java.home" value="${env.JAVA_HOME}"/>
	<property name="conf.dir" value="${basedir}/conf"/>

	<!-- my.build.properties is your way to override
		properties which are not supposed to be
		checked in.  If it doesn't exist, ant
		will just skip it.  Properties defined
		there override those defined in build.properties
		or in this file -->
	<property file="${conf.dir}/my.build.properties"/>

	<property file="${conf.dir}/build.properties"/>

	<!-- Which suite to run in the run_test and profile_test
	     targets.  Normally the whole suite, but can be
	     set to a sub-suite or individual test, for example by specifying
	     -Dtest.suite=FastTests on the ant command line.  -->
	<property name="test.suite" value="ApplicationTestSuite" />

	<!-- Probably need about 550M for 64-bit systems 
	     (instead of 350M for 32-bit). -->
	<property name="test.memory" value="1024M" />
	<!-- 550M wasn't enough for me, needs more experimentation -->
	<property name="profile.memory" value="550M" />

	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="sql.dir" value="${basedir}/sql"/>
	<property name="build.dir" value="${basedir}/target"/>
	<property name="build.classes" value="${basedir}/target/classes"/>
			

		<property name="db.driver" value="com.mysql.jdbc.Driver"/>
	<property name="database.driver.jar" 
		value="./lib/mysql-connector-java-3.1.13-bin.jar"/>
	<path id="class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
        <pathelement location="${build.src.dir}"/>
        <pathelement location="${build.classes}"/>
	</path>
    <echo level="debug">CLASSPATH - ${java.class.path}</echo>

	<!--definitions & target for SVNant 
		To make the targets work (1) get svnant from http://subclipse.tigris.org/svnant.html
		(2) copy  svnClientAdapter.jar and svnant.jar to ${ANT_HOME}/lib
	-->
	<property name="src.revision" value="Unknown" />
	<condition property="svnant.installed">
		<and>
			<available file="${env.ANT_HOME}/lib/svnClientAdapter.jar"/>
			<available file="${env.ANT_HOME}/lib/svnant.jar"/>
		</and>
	</condition>

	<target name="svn-revision" if="svnant.installed"  description="Sets SVN revision">
		<typedef name="svn"  classname="org.tigris.subversion.svnant.SvnTask"  /> 	
		<svn javahl="false" >
			<status path="./build.xml" revisionProperty="src.revision" />
		</svn>
	</target>
	<!-- end definitions & target for svnant -->
	
	
	<target name="init">
		<tstamp>
			<format property="BUILD_ID" pattern="MMM-dd-yyyy hh:mm aa z" locale="en"/>
		</tstamp>
	</target>

	<target name="check_config">
		<fail message="JAVA_HOME not set. Please set JAVA_HOME" unless="env.JAVA_HOME"/>
		<!--check the jre version-->
	</target>

	<target name="make_dir">
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.classes}/conf"/>
	</target>
	
	<target name="copy_files">
		<copy todir="${build.classes}/conf">
			<fileset dir="${basedir}/conf">
				<include name="*" />
			</fileset>
		</copy>
		<copy todir="${build.classes}/bin">
			<fileset dir="${basedir}/bin">
				<include name="*" />
			</fileset>
		</copy>
		<copy todir="${build.classes}/lib">
			<fileset dir="${basedir}/lib">
				<include name="*" />
			</fileset>
		</copy>		
	</target>

	<target name="clean_src_classes" description="Cleans the source classes">
		<delete>
			<fileset dir="${build.classes}" includes="**/*.class"/>
		</delete>
	</target>

	<target name="clean" description="Cleans the temp build directory">
		<delete dir="${build.dir}"/>
	</target>

	<target name="compile" depends="init,make_dir,copy_files" 
		description="Compiles the source files">
		<javac srcdir="${src.dir}" 
		       destdir="${build.classes}" 
		       debug="${debug.flag}"
		       deprecation="on"
		       target="1.5"
		       includes="**/*.java"
		       excludes="${global.exclude}">
			<classpath refid="class.path"/>
		</javac>
	</target>

</project>
