// ============================================================================
//
// Copyright (c) 2005-2007, Talend Inc.
//
// This source code has been automatically generated by Talend Open Studio
// / JobDesigner (CodeGenerator version 2.3.0.RC1_r8112).
// You can find more information about Talend products at www.talend.com.
// You may distribute this code under the terms of the GNU LGPL license
// (http://www.gnu.org/licenses/lgpl.html).
//
// ============================================================================ 
package org_mifos_etl.masteretlloader;

import routines.DataOperation;
import routines.Mathematical;
import routines.Numeric;
import routines.Relational;
import routines.StringHandling;
import routines.TalendDataGenerator;
import routines.TalendDate;
import routines.TalendString;
import routines.system.*;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;

/**
 * Job: MasterETLLoader Purpose: The master job to execute the ETLs in sequence<br>
 * Description: The master job to execute the ETLs in sequence <br>
 * 
 * @author ravikasar@gmail.com
 * @version 0.1
 * @status DEV
 */
public class MasterETLLoader {
	// create and load default properties
	private static java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	private static java.util.Properties context = new java.util.Properties();
	private static final String jobName = "MasterETLLoader";
	private static final String projectName = "ORG_MIFOS_ETL";
	public static Integer errorCode = null;
	private static final java.util.Map<String, Long> start_Hash = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Long>());
	private static final java.util.Map<String, Long> end_Hash = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Long>());
	private static final java.util.Map<String, Boolean> ok_Hash = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Boolean>());
	private static final java.util.Map<String, Object> globalMap = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Object>());

	private class TalendException extends Exception {
		private Exception e = null;
		private MasterETLLoader c = null;
		private String currentComponent = null;

		private TalendException(MasterETLLoader c, Exception e,
				String errorComponent) {
			this.currentComponent = errorComponent;
			this.e = e;
			this.c = c;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				globalMap.put(currentComponent + "_ERROR_MESSAGE", e
						.getMessage());
				System.err
						.println("Exception in component " + currentComponent);
			}
			if (!(e instanceof TDieException)) {
				e.printStackTrace();
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass()
							.getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(c, new Object[] { e });
							break;
						}
					}

				} catch (java.lang.SecurityException e) {
					this.e.printStackTrace();
				} catch (java.lang.IllegalArgumentException e) {
					this.e.printStackTrace();
				} catch (java.lang.IllegalAccessException e) {
					this.e.printStackTrace();
				} catch (java.lang.reflect.InvocationTargetException e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tRunJob_1_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_1", System.currentTimeMillis());
		tRunJob_1_onSubJobError(exception);
	}

	public void tRunJob_2_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_2", System.currentTimeMillis());
		tRunJob_2_onSubJobError(exception);
	}

	public void tRunJob_3_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_3", System.currentTimeMillis());
		tRunJob_3_onSubJobError(exception);
	}

	public void tRunJob_4_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_4", System.currentTimeMillis());
		tRunJob_4_onSubJobError(exception);
	}

	public void tRunJob_8_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_8", System.currentTimeMillis());
		tRunJob_8_onSubJobError(exception);
	}

	public void tRunJob_5_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_5", System.currentTimeMillis());
		tRunJob_5_onSubJobError(exception);
	}

	public void tRunJob_6_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_6", System.currentTimeMillis());
		tRunJob_6_onSubJobError(exception);
	}

	public void tRunJob_7_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_7", System.currentTimeMillis());
		tRunJob_7_onSubJobError(exception);
	}

	public void tRunJob_9_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_9", System.currentTimeMillis());
		tRunJob_9_onSubJobError(exception);
	}

	public void tRunJob_10_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_10", System.currentTimeMillis());
		tRunJob_10_onSubJobError(exception);
	}

	public void tRunJob_11_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_11", System.currentTimeMillis());
		tRunJob_11_onSubJobError(exception);
	}

	public void tRunJob_12_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_12", System.currentTimeMillis());
		tRunJob_12_onSubJobError(exception);
	}

	public void tRunJob_13_error(Exception exception) throws TalendException {
		end_Hash.put("tRunJob_13", System.currentTimeMillis());
		tRunJob_13_onSubJobError(exception);
	}

	public void tRunJob_1_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_2_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_3_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_4_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_8_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_5_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_6_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_7_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_9_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_10_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_11_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_12_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_13_onSubJobError(Exception exception)
			throws TalendException {
	}

	public void tRunJob_1Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_1 begin ] start
			 */

			ok_Hash.put("tRunJob_1", false);
			start_Hash.put("tRunJob_1", System.currentTimeMillis());
			currentComponent = "tRunJob_1";

			/**
			 * [tRunJob_1 begin ] stop
			 */
			/**
			 * [tRunJob_1 main ] start
			 */

			currentComponent = "tRunJob_1";

			org_mifos_etl.regionalofficeloader.RegionalOfficeLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.regionalofficeloader.RegionalOfficeLoader.errorCode);

			if (org_mifos_etl.regionalofficeloader.RegionalOfficeLoader.errorCode != null
					|| org_mifos_etl.regionalofficeloader.RegionalOfficeLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_1 main ] stop
			 */

			/**
			 * [tRunJob_1 end ] start
			 */

			currentComponent = "tRunJob_1";

			ok_Hash.put("tRunJob_1", true);
			end_Hash.put("tRunJob_1", System.currentTimeMillis());

			/**
			 * [tRunJob_1 end ] stop
			 */

			tRunJob_2Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_2Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_2 begin ] start
			 */

			ok_Hash.put("tRunJob_2", false);
			start_Hash.put("tRunJob_2", System.currentTimeMillis());
			currentComponent = "tRunJob_2";

			/**
			 * [tRunJob_2 begin ] stop
			 */
			/**
			 * [tRunJob_2 main ] start
			 */

			currentComponent = "tRunJob_2";

			org_mifos_etl.subregionalofficeloader.SubRegionalOfficeLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.subregionalofficeloader.SubRegionalOfficeLoader.errorCode);

			if (org_mifos_etl.subregionalofficeloader.SubRegionalOfficeLoader.errorCode != null
					|| org_mifos_etl.subregionalofficeloader.SubRegionalOfficeLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_2 main ] stop
			 */

			/**
			 * [tRunJob_2 end ] start
			 */

			currentComponent = "tRunJob_2";

			ok_Hash.put("tRunJob_2", true);
			end_Hash.put("tRunJob_2", System.currentTimeMillis());

			/**
			 * [tRunJob_2 end ] stop
			 */

			tRunJob_3Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_3Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_3 begin ] start
			 */

			ok_Hash.put("tRunJob_3", false);
			start_Hash.put("tRunJob_3", System.currentTimeMillis());
			currentComponent = "tRunJob_3";

			/**
			 * [tRunJob_3 begin ] stop
			 */
			/**
			 * [tRunJob_3 main ] start
			 */

			currentComponent = "tRunJob_3";

			org_mifos_etl.areaofficeloader.AreaOfficeLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get()).put(errorCode,
					org_mifos_etl.areaofficeloader.AreaOfficeLoader.errorCode);

			if (org_mifos_etl.areaofficeloader.AreaOfficeLoader.errorCode != null
					|| org_mifos_etl.areaofficeloader.AreaOfficeLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_3 main ] stop
			 */

			/**
			 * [tRunJob_3 end ] start
			 */

			currentComponent = "tRunJob_3";

			ok_Hash.put("tRunJob_3", true);
			end_Hash.put("tRunJob_3", System.currentTimeMillis());

			/**
			 * [tRunJob_3 end ] stop
			 */

			tRunJob_4Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_4Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_4 begin ] start
			 */

			ok_Hash.put("tRunJob_4", false);
			start_Hash.put("tRunJob_4", System.currentTimeMillis());
			currentComponent = "tRunJob_4";

			/**
			 * [tRunJob_4 begin ] stop
			 */
			/**
			 * [tRunJob_4 main ] start
			 */

			currentComponent = "tRunJob_4";

			org_mifos_etl.branchofficeloader.BranchOfficeLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.branchofficeloader.BranchOfficeLoader.errorCode);

			if (org_mifos_etl.branchofficeloader.BranchOfficeLoader.errorCode != null
					|| org_mifos_etl.branchofficeloader.BranchOfficeLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_4 main ] stop
			 */

			/**
			 * [tRunJob_4 end ] start
			 */

			currentComponent = "tRunJob_4";

			ok_Hash.put("tRunJob_4", true);
			end_Hash.put("tRunJob_4", System.currentTimeMillis());

			/**
			 * [tRunJob_4 end ] stop
			 */

			tRunJob_8Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_8Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_8 begin ] start
			 */

			ok_Hash.put("tRunJob_8", false);
			start_Hash.put("tRunJob_8", System.currentTimeMillis());
			currentComponent = "tRunJob_8";

			/**
			 * [tRunJob_8 begin ] stop
			 */
			/**
			 * [tRunJob_8 main ] start
			 */

			currentComponent = "tRunJob_8";

			org_mifos_etl.loanofficerdimensionloader.LoanOfficerDimensionLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.loanofficerdimensionloader.LoanOfficerDimensionLoader.errorCode);

			if (org_mifos_etl.loanofficerdimensionloader.LoanOfficerDimensionLoader.errorCode != null
					|| org_mifos_etl.loanofficerdimensionloader.LoanOfficerDimensionLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_8 main ] stop
			 */

			/**
			 * [tRunJob_8 end ] start
			 */

			currentComponent = "tRunJob_8";

			ok_Hash.put("tRunJob_8", true);
			end_Hash.put("tRunJob_8", System.currentTimeMillis());

			/**
			 * [tRunJob_8 end ] stop
			 */

			tRunJob_5Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_5Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_5 begin ] start
			 */

			ok_Hash.put("tRunJob_5", false);
			start_Hash.put("tRunJob_5", System.currentTimeMillis());
			currentComponent = "tRunJob_5";

			/**
			 * [tRunJob_5 begin ] stop
			 */
			/**
			 * [tRunJob_5 main ] start
			 */

			currentComponent = "tRunJob_5";

			org_mifos_etl.centerdimensionloader.CenterDimensionLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.centerdimensionloader.CenterDimensionLoader.errorCode);

			if (org_mifos_etl.centerdimensionloader.CenterDimensionLoader.errorCode != null
					|| org_mifos_etl.centerdimensionloader.CenterDimensionLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_5 main ] stop
			 */

			/**
			 * [tRunJob_5 end ] start
			 */

			currentComponent = "tRunJob_5";

			ok_Hash.put("tRunJob_5", true);
			end_Hash.put("tRunJob_5", System.currentTimeMillis());

			/**
			 * [tRunJob_5 end ] stop
			 */

			tRunJob_6Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_6Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_6 begin ] start
			 */

			ok_Hash.put("tRunJob_6", false);
			start_Hash.put("tRunJob_6", System.currentTimeMillis());
			currentComponent = "tRunJob_6";

			/**
			 * [tRunJob_6 begin ] stop
			 */
			/**
			 * [tRunJob_6 main ] start
			 */

			currentComponent = "tRunJob_6";

			org_mifos_etl.groupdimensionloader.GroupDimensionLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.groupdimensionloader.GroupDimensionLoader.errorCode);

			if (org_mifos_etl.groupdimensionloader.GroupDimensionLoader.errorCode != null
					|| org_mifos_etl.groupdimensionloader.GroupDimensionLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_6 main ] stop
			 */

			/**
			 * [tRunJob_6 end ] start
			 */

			currentComponent = "tRunJob_6";

			ok_Hash.put("tRunJob_6", true);
			end_Hash.put("tRunJob_6", System.currentTimeMillis());

			/**
			 * [tRunJob_6 end ] stop
			 */

			tRunJob_7Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_7Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_7 begin ] start
			 */

			ok_Hash.put("tRunJob_7", false);
			start_Hash.put("tRunJob_7", System.currentTimeMillis());
			currentComponent = "tRunJob_7";

			/**
			 * [tRunJob_7 begin ] stop
			 */
			/**
			 * [tRunJob_7 main ] start
			 */

			currentComponent = "tRunJob_7";

			org_mifos_etl.clientdimensionloader.ClientDimensionLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.clientdimensionloader.ClientDimensionLoader.errorCode);

			if (org_mifos_etl.clientdimensionloader.ClientDimensionLoader.errorCode != null
					|| org_mifos_etl.clientdimensionloader.ClientDimensionLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_7 main ] stop
			 */

			/**
			 * [tRunJob_7 end ] start
			 */

			currentComponent = "tRunJob_7";

			ok_Hash.put("tRunJob_7", true);
			end_Hash.put("tRunJob_7", System.currentTimeMillis());

			/**
			 * [tRunJob_7 end ] stop
			 */

			tRunJob_9Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_9Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_9 begin ] start
			 */

			ok_Hash.put("tRunJob_9", false);
			start_Hash.put("tRunJob_9", System.currentTimeMillis());
			currentComponent = "tRunJob_9";

			/**
			 * [tRunJob_9 begin ] stop
			 */
			/**
			 * [tRunJob_9 main ] start
			 */

			currentComponent = "tRunJob_9";

			org_mifos_etl.clientloanaccountloader.ClientLoanAccountLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.clientloanaccountloader.ClientLoanAccountLoader.errorCode);

			if (org_mifos_etl.clientloanaccountloader.ClientLoanAccountLoader.errorCode != null
					|| org_mifos_etl.clientloanaccountloader.ClientLoanAccountLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_9 main ] stop
			 */

			/**
			 * [tRunJob_9 end ] start
			 */

			currentComponent = "tRunJob_9";

			ok_Hash.put("tRunJob_9", true);
			end_Hash.put("tRunJob_9", System.currentTimeMillis());

			/**
			 * [tRunJob_9 end ] stop
			 */

			tRunJob_10Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_10Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_10 begin ] start
			 */

			ok_Hash.put("tRunJob_10", false);
			start_Hash.put("tRunJob_10", System.currentTimeMillis());
			currentComponent = "tRunJob_10";

			/**
			 * [tRunJob_10 begin ] stop
			 */
			/**
			 * [tRunJob_10 main ] start
			 */

			currentComponent = "tRunJob_10";

			org_mifos_etl.clientstatefactloader.ClientStateFactLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.clientstatefactloader.ClientStateFactLoader.errorCode);

			if (org_mifos_etl.clientstatefactloader.ClientStateFactLoader.errorCode != null
					|| org_mifos_etl.clientstatefactloader.ClientStateFactLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_10 main ] stop
			 */

			/**
			 * [tRunJob_10 end ] start
			 */

			currentComponent = "tRunJob_10";

			ok_Hash.put("tRunJob_10", true);
			end_Hash.put("tRunJob_10", System.currentTimeMillis());

			/**
			 * [tRunJob_10 end ] stop
			 */

			tRunJob_11Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_11Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_11 begin ] start
			 */

			ok_Hash.put("tRunJob_11", false);
			start_Hash.put("tRunJob_11", System.currentTimeMillis());
			currentComponent = "tRunJob_11";

			/**
			 * [tRunJob_11 begin ] stop
			 */
			/**
			 * [tRunJob_11 main ] start
			 */

			currentComponent = "tRunJob_11";

			org_mifos_etl.clientloanfactloader.ClientLoanFactLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.clientloanfactloader.ClientLoanFactLoader.errorCode);

			if (org_mifos_etl.clientloanfactloader.ClientLoanFactLoader.errorCode != null
					|| org_mifos_etl.clientloanfactloader.ClientLoanFactLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_11 main ] stop
			 */

			/**
			 * [tRunJob_11 end ] start
			 */

			currentComponent = "tRunJob_11";

			ok_Hash.put("tRunJob_11", true);
			end_Hash.put("tRunJob_11", System.currentTimeMillis());

			/**
			 * [tRunJob_11 end ] stop
			 */

			tRunJob_12Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_12Process() throws TalendException {
		String currentComponent = "";
		try {
			/**
			 * [tRunJob_12 begin ] start
			 */

			ok_Hash.put("tRunJob_12", false);
			start_Hash.put("tRunJob_12", System.currentTimeMillis());
			currentComponent = "tRunJob_12";

			/**
			 * [tRunJob_12 begin ] stop
			 */
			/**
			 * [tRunJob_12 main ] start
			 */

			currentComponent = "tRunJob_12";

			org_mifos_etl.groupstatefactloader.GroupStateFactLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.groupstatefactloader.GroupStateFactLoader.errorCode);

			if (org_mifos_etl.groupstatefactloader.GroupStateFactLoader.errorCode != null
					|| org_mifos_etl.groupstatefactloader.GroupStateFactLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_12 main ] stop
			 */
			/**
			 * [tRunJob_12 end ] start
			 */

			currentComponent = "tRunJob_12";

			ok_Hash.put("tRunJob_12", true);
			end_Hash.put("tRunJob_12", System.currentTimeMillis());

			/**
			 * [tRunJob_12 end ] stop
			 */

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public void tRunJob_13Process() throws TalendException {
		String currentComponent = "";
		try {

			/**
			 * [tRunJob_13 begin ] start
			 */

			ok_Hash.put("tRunJob_13", false);
			start_Hash.put("tRunJob_13", System.currentTimeMillis());
			currentComponent = "tRunJob_13";

			/**
			 * [tRunJob_13 begin ] stop
			 */
			/**
			 * [tRunJob_13 main ] start
			 */

			currentComponent = "tRunJob_13";

			org_mifos_etl.dailytimedimensionloader.DailyTimeDimensionLoader
					.runJob(new String[] { "--father_pid=" + pid + "",
							"--root_pid=" + rootPid + "", "--context=Default"

					});

			((java.util.Map) threadLocal.get())
					.put(
							errorCode,
							org_mifos_etl.dailytimedimensionloader.DailyTimeDimensionLoader.errorCode);

			if (org_mifos_etl.dailytimedimensionloader.DailyTimeDimensionLoader.errorCode != null
					|| org_mifos_etl.dailytimedimensionloader.DailyTimeDimensionLoader.status
							.equals("failure")) {
				throw new TRunJobException();
			}

			/**
			 * [tRunJob_13 main ] stop
			 */

			/**
			 * [tRunJob_13 end ] start
			 */

			currentComponent = "tRunJob_13";

			ok_Hash.put("tRunJob_13", true);
			end_Hash.put("tRunJob_13", System.currentTimeMillis());

			/**
			 * [tRunJob_13 end ] stop
			 */

			tRunJob_1Process();

		} catch (Exception e) {
			throw new TalendException(this, e, currentComponent);
		}
	}

	public static boolean watch = false;
	public static int portStats = 3334;
	public static int portTraces = 4334;
	public static String clientHost;
	public static String defaultClientHost = "localhost";
	public static String contextStr = "Default";
	public static String pid = "0";
	public static String rootPid = null;
	public static String fatherPid = null;
	private static ThreadLocal threadLocal = new ThreadLocal();
	private static SyncInt runningThreadCount = new SyncInt();

	private static class SyncInt {
		private int count = 0;

		public synchronized void add(int i) {
			count += i;
		}

		public synchronized int getCount() {
			return count;
		}
	}

	private static java.util.Properties context_param = new java.util.Properties();

	public static String status = "";

	public static void main(String[] args) {
		int exitCode = runJob(args);
		System.exit(exitCode);
	}

	public static synchronized int runJob(String[] args) {

		init();

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		pid = TalendString.getAsciiRandomString(6);
		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		}

		try {
			java.io.InputStream inContext = MasterETLLoader.class
					.getClassLoader()
					.getResourceAsStream(
							"org_mifos_etl/masteretlloader/contexts/Default.properties");
			if (inContext != null) {
				defaultProps.load(inContext);
				inContext.close();
				context = new java.util.Properties(defaultProps);
			}

			if (contextStr.compareTo("Default") != 0) {
				inContext = MasterETLLoader.class.getClassLoader()
						.getResourceAsStream(
								"org_mifos_etl/masteretlloader/contexts/"
										+ contextStr + ".properties");
				if (inContext != null) {
					context.load(inContext);
					inContext.close();
				}
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
			}

		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		long end = 0;
		long start = System.currentTimeMillis();
		final MasterETLLoader MasterETLLoaderClass = new MasterETLLoader();
		runningThreadCount.add(1);
		new Thread() {
			public void run() {
				java.util.Map threadRunResultMap = new java.util.HashMap();
				threadRunResultMap.put(errorCode, null);
				threadRunResultMap.put(status, "");
				threadLocal.set(threadRunResultMap);

				try {
					((java.util.Map) threadLocal.get()).put(errorCode, null);
					MasterETLLoaderClass.tRunJob_13Process();
					((java.util.Map) threadLocal.get()).put(status, "end");
				} catch (TalendException e_tRunJob_13) {
					((java.util.Map) threadLocal.get()).put(status, "failure");
					e_tRunJob_13.printStackTrace();

				} finally {
				}

				Integer localErrorCode = (Integer) (((java.util.Map) threadLocal
						.get()).get(errorCode));
				String localStatus = (String) (((java.util.Map) threadLocal
						.get()).get(status));
				if (localErrorCode != null) {
					if (errorCode == null
							|| localErrorCode.compareTo(errorCode) > 0) {
						errorCode = localErrorCode;
					}
				} else if (!status.equals("failure")) {
					status = localStatus;
				}

				runningThreadCount.add(-1);
			}
		}.start();

		while (MasterETLLoaderClass.runningThreadCount.getCount() > 0) {
			try {
				Thread.sleep(10);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		end = System.currentTimeMillis();
		if (watch) {
			System.out.println((end - start) + " milliseconds");
		}
		if (errorCode == null) {
			return status != null && status.equals("failure") ? 1 : 0;
		} else {
			return errorCode.intValue();
		}
	}

	public static void evalParam(String arg) {
		if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			portStats = Integer.parseInt(arg.substring(12));
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				context_param.put(keyValue.substring(0, index), keyValue
						.substring(index + 1));
			}
		}

	}

	private static void init() {

		defaultProps.clear();
		context.clear();
		errorCode = null;
		threadLocal = new ThreadLocal();
		runningThreadCount = new SyncInt();
		start_Hash.clear();
		end_Hash.clear();
		ok_Hash.clear();
		globalMap.clear();
		watch = false;
		portStats = 3334;
		portTraces = 4334;
		clientHost = null;
		defaultClientHost = "localhost";
		contextStr = "Default";
		pid = "0";
		rootPid = null;
		fatherPid = null;
		context_param.clear();
		status = "";
	}
}
/*******************************************************************************
 * 31768 characters generated by Talend OpenStudio on the April 9, 2008 2:53:09
 * PM BST
 ******************************************************************************/
